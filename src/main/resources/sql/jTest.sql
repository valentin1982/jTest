

--
-- Table structure for table `Ansver`
--

DROP TABLE IF EXISTS `Ansver`;
/*!40101 SET @saved_cs_client     = @@character_set_client */;
/*!40101 SET character_set_client = utf8 */;
CREATE TABLE `Ansver` (
  `id` bigint(20) NOT NULL AUTO_INCREMENT,
  `isCor` bit(1) NOT NULL,
  `text` varchar(1024) DEFAULT NULL,
  `task_id` bigint(20) DEFAULT NULL,
  `question_id` bigint(20) DEFAULT NULL,
  PRIMARY KEY (`id`),
  KEY `FK752F281D2DF76CFE` (`task_id`),
  KEY `FK752F281D10BF54F` (`task_id`),
  KEY `FK752F281D14701930` (`task_id`),
  KEY `FK752F281DA98A6B2F` (`question_id`),
  KEY `FK752F281DA31372F6` (`task_id`),
  KEY `FK752F281D806F4C71` (`task_id`),
  KEY `FK752F281D5576B63B` (`task_id`)
) ENGINE=MyISAM AUTO_INCREMENT=1446 DEFAULT CHARSET=utf8;
/*!40101 SET character_set_client = @saved_cs_client */;

--
-- Dumping data for table `Ansver`
--

LOCK TABLES `Ansver` WRITE;
/*!40000 ALTER TABLE `Ansver` DISABLE KEYS */;
INSERT INTO `Ansver` VALUES 
(1,'\0','Скриптовый',138,0),
(2,'\0','Native language',138,0),
(3,'\0','От 0 до 32767',1,0),
(4,'','От 0 до \\uFFFF',1,0),
(5,'\0','От 0 до 255',1,0),
(6,'\0','От –32768 до 32767',1,0),
(7,'','85',2,0),
(8,'\0','120',2,0),
(9,'\0','101',2,0),
(10,'\0','257',2,0),
(11,'','64',3,0),
(12,'\0','16',3,0),
(13,'\0','8',3,0),
(14,'\0','32',3,0),
(15,'','8',4,0),
(16,'\0','7',4,0),
(17,'\0','5',4,0),
(18,'\0','4',4,0),
(19,'\0','6',4,0),
(20,'','32767',5,0),
(21,'\0','1024',5,0),
(22,'\0','65534',5,0),
(23,'\0','16373',5,0),
(24,'\0','256',5,0),
(25,'','1000100011',6,0),
(26,'\0','1000101011',6,0),
(27,'\0','100110011',6,0),
(28,'\0','1100100010',6,0),
(29,'\0','1110101011',6,0),
(30,'\0','Переменная',7,0),
(31,'\0','Метод',7,0),
(32,'','VM',7,0),
(33,'','Объектно-ориентированное программирование',8,0),
(34,'\0','Объективное около-научное программирование',8,0),
(35,'\0','Это не аббривеатура',8,0),
(36,'\0','Объектно-ориентированное пространство',8,0),
(37,'\0','java',9,0),
(38,'\0','compile',9,0),
(39,'','javac',9,0),
(40,'\0','java -compile',9,0),
(41,'\0','javac',10,0),
(42,'','java',10,0),
(43,'\0','java -run',10,0),
(44,'','import class a.b.C',11,0),
(45,'\0','import a.b.C',11,0),
(46,'\0','import a.b',11,0),
(47,'','Инкапсуляция.',12,0),
(48,'','Полиморфизм.',12,0),
(49,'','Ни один из вышеперечисленных вариантов.',12,0),
(50,'\0','Да',13,0),
(51,'','Нет',13,0),
(52,'\0','Нет',14,0),
(53,'','Да',14,0),
(54,'','Механизм объектно-ориентированного программирования позволяющий описать новый класс на основе уже существующего \n(родительского, базового) класса.',15,0),
(55,'\0','Механизм объектно-ориентированного программирования позволяющий придать объекту характеристики,которые отличают его от \nвсех других объектов',15,0),
(56,'\0','Механизм объектно-ориентированного программирования позволяющий пользователю не задумываться о сложности реализации используемого \nпрограммного компонента, а взаимодействовать с ним посредством предоставляемого интерфейса.',15,0),
(57,'','Возможность объектов с одинаковой спецификацией иметь различную реализацию',16,0),
(58,'\0','Возможность объектов с одинаковой  реализацией иметь различную  спецификацию',16,0),
(59,'\0','Возможность объектов описать новый класс на основе уже существующих.',16,0),
(60,'','Полиморфизм интерфейсов.',17,0),
(1366,'','Полиморфизм при помощи абстрактных классов.Полиморфизм наследования.Полиморфизм методов',17,0),
(61,'','Полиморфизм представлений. Полиморфизм методов с переменным числом аргументов.',17,0),
(1367,'','Полиморфизм через переопределение методов',17,0),
(62,'','Полиморфизм через динамическое определение типов (RTTI)',17,0),
(65,'\0','Механизм языка программирования, который не ограничивает доступ к составляющим объект компонентам делает их публичными, доступными.',18,0),
(66,'\0','Механизм языка программирования, который обеспечивает придание объекту характеристик, которые четко определяют его концептуальные границы.',18,0),
(67,'\0','3',19,0),
(68,'\0','1',19,0),
(69,'','2',19,0),
(70,'\0','4',19,0),
(71,'\0','0',19,0),
(72,'','NaN',20,0),
(73,'\0','10',20,0),
(74,'\0','Infinity',20,0),
(75,'\0','Ошибка компиляции',20,0),
(76,'','%',21,0),
(77,'\0','||',21,0),
(78,'\0','default',21,0),
(79,'\0','Ошибка компиляции',21,0),
(80,'\0','7',22,0),
(81,'','5',22,0),
(82,'\0','4',22,0),
(83,'\0','6',22,0),
(84,'\0','8',22,0),
(85,'','Да. За исключением случаев, разрешенных полиморфизмом',23,0),
(86,'\0','Да. Всегда и полностью',23,0),
(87,'\0','Нет. Ни при каких условиях',23,0),
(88,'\0','Нет. За исключением случаев, разрешенных полиморфизмом',23,0),
(89,'\0','Нет',24,0),
(90,'','Да',24,0),
(91,'\0','Да',25,0),
(92,'','Нет',25,0),
(93,'\0','1',26,0),
(94,'','3',26,0),
(95,'\0','2',26,0),
(96,'\0','4',26,0),
(97,'','Нет',27,0),
(98,'\0','Да',27,0),
(99,'','extends',28,0),
(100,'\0',':',28,0),
(101,'\0','implements',28,0),
(102,'\0','class',28,0),
(103,'','всегда public',29,0),
(104,'\0','указывается программистом',29,0),
(105,'\0','всегда default (package local) если другое не указал программист',29,0),
(106,'\0','Нет',30,0),
(107,'','Да',30,0),
(108,'','Нет (но тогда класс должен быть abstract)',31,0),
(109,'\0','Да',31,0),
(110,'\0','Нет',32,0),
(111,'','Да',32,0),
(112,'','default: члены класса видны внутри пакета \nprotected: члены класса доступны внутри пакета и в наследниках; \npublic: члены класс доступны всем; \nprivet: видны внутри класса;',33,0),
(113,'\0','privet: члены класса видны внутри пакета. \nprotected: видны внутри класса. \ndefault: члены класс доступны всем; \npublic: члены класса доступны внутри пакета и в наследниках;',33,0),
(114,'\0','privet: члены класса доступны внутри пакета и в наследниках; \nprotected: члены класс доступны всем; \ndefault: видны внутри класса. \npublic: члены класса видны внутри пакета.',33,0),
(115,'\0','delete,get',34,0),
(116,'','set,Get',34,0),
(117,'\0','retrieve,put',34,0),
(118,'','Если у элемента вообще не указан модификатор уровня доступа, то будет виден из подклассов и классов того же пакета.',35,0),
(119,'\0','Если необходимо, чтобы элемент был доступен только подклассам, причем независимо от того, находятся ли они в данном пакете или нет.',35,0),
(120,'\0','Если доступен только внутри класса и нигде больше.',35,0),
(121,'','Нет',36,0),
(122,'\0','Да',36,0),
(123,'','Абстрактный класс может реализовывать методы; интерфейс не может реализовывать методы.\nВсе методы интерфейса по-умолчанию являются публичными (public) и абстрактными (abstract),
 а поля - public static final.',37,0),
(124,'\0','Абстрактный класс не может реализовывать методы; интерфейс может реализовывать методы.\nВсе методы интерфейса по-умолчанию являются публичными (privet) а поля - privet static final.',37,0),
(125,'\0','Абстрактный класс может реализовывать методы; интерфейс может реализовывать методы.\nВсе методы интерфейса по-умолчанию являются публичными (public) и абстрактными (abstract),
 а поля - public static final.',37,0),
(345,'\0','Создает объекты.',38,0),
(346,'\0','Содержит ключевое слово new;',38,0),
(347,'\0','Создает ссылки.',38,0),
(348,'','Ни одно из приведенных утверждений не верно.',38,0),
(126,'','Доступ к переменной осуществляется через геттер и сеттер объекта данного класса.',39,0),
(127,'\0','Доступ к переменной осуществляется через конструктор объекта данного класса.',39,0),
(128,'\0','Доступ к переменной осуществляется через ключевое слово new.',39,0),
(349,'\0','Класс.',40,0),
(350,'\0','Интерфейс.',40,0),
(351,'','Метод.',40,0),
(352,'\0','Конструктор',40,0),
(353,'\0','Ссылку на другой объект.',40,0),
(129,'','Статические не статические.',41,0),
(130,'\0','Локальные классы (local classes); анонимные классы (anonymous classes).',41,0),
(131,'\0','Оба варианта.',41,0),
(132,'','Нет',42,0),
(133,'\0','Да',42,0),
(134,'\0','inner',43,0),
(135,'\0','extends',43,0),
(136,'\0','in',43,0),
(137,'','static',43,0),
(138,'\0','Нет',44,0),
(139,'','Да',44,0),
(140,'\0','static метод не может быть вызван из не статического метода.',45,0),
(141,'','non-static метод не может быть вызван из другого не статического метода без создания экземпляра этого класса.',45,0),
(142,'\0','private-метод не может быть вызван из другого метода этого класса.',45,0),
(143,'','non-static метод не может быть вызван из статического метода без создания экземпляра соответствующего класса.',45,0),
(144,'\0','final-метод не может быть статическим.',45,0),
(147,'','Метод называется переопределенным, если класс наследник определяет метод с совпадающей сигнатурой с методом супер класса.',46,0),
(148,'\0','Метод называется переопределенным, если определение внутри одного класса двух или более методов с одним именем,\nесли только объявления их параметров различны.',46,0),
(149,'\0','Метод называется переопределенным, если методу присвоено некоторое уникальное имя, и который по этому имени можно вызвать \nиз остальных частей программы.',46,0),
(150,'','Да. Можно менять модификаторы доступа только на более открытые.',47,0),
(151,'\0','Нет',47,0),
(152,'\0','Да. Можно менять модификаторы доступа только на более закрытые.',47,0),
(153,'','Нет. Возвращаемое значение не может быть другого типа.',48,0),
(154,'\0','Да. Возвращаемое значение может быть другого типа.',48,0),
(155,'\0','Да. Возвращаемое значение может быть другого типа.Если его переопределить.',48,0),
(156,'','Нет. Если изменены типы передаваемых параметров.',49,0),
(157,'','Нет. метод будет считаться не переопределенным, а перезагруженным.',49,0),
(159,'','Это процесс автоматической инкапсуляции данных простого типа, в эквивалентную ему оболочку типа, как только понадобится \nобъект этого типа. При этом нет необходимости в явном создании объекта нужного типа.',50,0),
(160,'\0','Применение технологии трансляции байт-кода в машинный код непосредственно во время работы программы с возможностью \nсохранения версий класса в машинном коде.',50,0),
(161,'\0','Преобразование программы, представленной на одном из языков программирования, в программу на другом языке и, в определенном \nсмысле, равносильную первой.',50,0),
(162,'','Парадигма программирования, заключающаяся в таком описании данных и алгоритмов, которое можно применять к различным типам \nданных, не меняя само это описание.',51,0),
(163,'','Средства обобщенного программирования реализуются в языках программирования в виде тех или иных синтаксических средств, \nдающих возможность описывать данные (типы данных) и алгоритмы (процедуры, функции, методы),
 параметризованные типами данных. \nУ функции или типа данных явно описываются формальные параметры-типы.',51,0),
(164,'','Это технический термин, обозначающий набор свойств языка позволяющих определять и использовать обобщенные типы и методы. \nОбобщенные типы или методы отличаются от обычных тем, что имеют типизированные параметры.',51,0),
(166,'','В Java параметры всегда передаются по значению.',52,0),
(167,'\0','В Java параметры всегда передаются по ссылке и по значению.',52,0),
(168,'\0','В Java параметры всегда передаются по ссылке.',52,0),
(169,'','Нет',53,0),
(170,'\0','Да',53,0),
(171,'\0','Методы класса А должны быть простыми для понимания.',54,0),
(172,'\0','Желательно чтобы класс В взаимодействовал с пользователем программы.',54,0),
(173,'\0','Более сложные операции следует разместить в классе А.',54,0),
(174,'','Чем большая часть работы может быть выполнена в классе В,тем лучше. ',54,0),
(380,'\0','Абстрактный класс.',55,0),
(381,'','Интерфейс.',55,0),
(382,'\0','Object.',55,0),
(383,'\0','Внутренний класс.',55,0),
(384,'\0','Анонимный класс.',55,0),
(175,'\0','Аннотация является deprecated (и соответственно не рекомендуется к использованию)',56,0),
(176,'\0','Чтобы иметь возможность через Reflection получать дополнительную информацию о методах во время выполнения программы',56,0),
(177,'','Чтобы своевременно обнаружить изменение в сигнатуре метода у класса-предка (или интерфейса).',56,0),
(178,'\0','Чтобы пометить методы, которые обязательно должны быть переопределены в классах-наследниках.',56,0),
(179,'\0','Чтобы пометить методы, которые обязательно должны быть перегружены в классах-наследниках.',56,0),
(180,'','Определяется контракт о данных, который представляет сериализованный тип.',57,0),
(388,'','Пишется суррогатный контракт о данных, реализующий интерфейс  IDataContractSurrogate.',57,0),
(389,'\0','Первый вариант.',57,0),
(390,'\0','Второй вариант.',57,0),
(181,'','Да, есть.Нужно переопределить метод hashCode().',58,0),
(182,'\0','Да, есть.Нужно переопределить метод notifyAll().',58,0),
(183,'\0','Нет нету.',58,0),
(184,'\0','Может использоваться для обращения к открытым методам объекта.',59,0),
(564,'','Обладает размером, зависящим от класса.',59,0),
(565,'\0','Относится к типу данных класса.',59,0),
(566,'\0','Не содержит сам объект.',59,0),
(670,'\0','O(1).',60,0),
(671,'\0','O(α(n)).',60,0),
(672,'','O(log n).',60,0),
(673,'\0','O(log* n).',60,0),
(185,'','Конструктор по умолчанию – конструктор, не принимающий аргументов.',61,0),
(186,'\0','Конструктор по умолчанию – конструктор, принимающий в качестве аргумента объект того же класса.',61,0),
(187,'\0','Конструктор по умолчанию – конструктор, принимающий один аргумент.',61,0),
(674,'\0','У каждого листового узла имеются потомки, ключи которых меньше (либо равны) ключа родителя.',62,0),
(675,'','Ключ каждого левого потомка меньше, чем у родителя, а ключ каждого правого потомка больше ключа родителя (либо равен ему).',62,0),
(676,'\0','На пути от корня к каждому листовому узлу ключ каждого узла больше (либо равен) ключа его родителя.',62,0),
(677,'\0','Узел может иметь не более двух потомков.',62,0),
(188,'\0','Clazz Clazz(String name),
void Clazz(String name).',63,0),
(189,'','Clazz(String name),
Clazz().',63,0),
(190,'\0','int Clazz(String name),
Clazz(name).',63,0),
(191,'\0','final - управляет исключениями. finally - объявление константы. finalize() - метод, который помогает при сборке мусора.',64,0),
(192,'','final - объявление константы. finally - управляет исключениями. finalize() - метод, который помогает при сборке мусора.',64,0),
(193,'\0','final - управляет исключениями. finally - метод, который помогает при сборке мусора. finalize() - объявление константы.',64,0),
(678,'','Да.',65,0),
(679,'\0','Нет.',65,0),
(680,'\0','7.',66,0),
(681,'\0','15.',66,0),
(682,'\0','3.',66,0),
(683,'\0','2.',66,0),
(684,'','5.',66,0),
(668,'','Да.',67,0),
(669,'\0','Нет.',67,0),
(194,'','- Ошибка в памяти.',68,0),
(307,'','ByteCode Language (managed language)',138,0),
(308,'','- Переполнение стека.',68,0),
(309,'','- Сбой в работе виртуальной машины.',68,0),
(310,'','- Продолжение работы программы - невозможно (OutOfMamoryError,StackOverflowError)',68,0),
(195,'','- Ошибка в ходе работы программы.С правильной обработкой - возможно продолжение программы.',69,0),
(312,'\0','- Ошибка в ходе работы программы.С не правильной обработкой - не возможно продолжение программы.',69,0),
(196,'\0','new',70,0),
(197,'\0','catch',70,0),
(198,'\0','throw',70,0),
(199,'\0','try',70,0),
(200,'','throws',70,0),
(201,'\0','try',71,0),
(202,'\0','throws',71,0),
(203,'\0','throw',71,0),
(204,'','catch',71,0),
(205,'','Да.',72,0),
(522,'\0','Да.',73,0),
(523,'\0','Нет.',73,0),
(524,'','За О(1).',73,0),
(525,'\0','за О(2).',73,0),
(206,'','ArrayList - это список, реализованный на основе массива. \nLinkedList - это связный список, основанный на объектах с ссылками между ними.',74,0),
(207,'\0','ArrayList - это связный список, основанный на объектах с ссылками между ними. \nLinkedList - это список, реализованный на основе массива.',74,0),
(208,'','методы класса Hashtable синхронизированы. \nHashMap - нет. Hashtable разрешает использование null в качестве ключей и значений.\nHashMap - нет.',75,0),
(209,'\0','методы класса Hashtable не синхронизированы. \nHashMap - синхронизированы. \nHashtable не разрешает использование null в качестве ключей и значений. HashMap - разрешает.',75,0),
(210,'','Все методы класса Vector синхронизированы. Методы класса ArrayList не синхронизированы.',76,0),
(211,'\0','Все методы класса ArrayList синхронизированы. Методы класса Vector не синхронизированы.',76,0),
(212,'\0','Нет начального количества',77,0),
(213,'','16',77,0),
(214,'\0','Задаются произвольно',77,0),
(215,'','2^32',78,0),
(216,'\0','3^34',78,0),
(217,'\0','2^48',78,0),
(218,'\0','В куче',79,0),
(219,'','В стеке',79,0),
(220,'\0','Не выделяется',79,0),
(221,'','List.Queue.',80,0),
(222,'\0','List',80,0),
(223,'\0','List,Map',80,0),
(224,'','HashSet - множество не сортированных объектов (элементы хранятся в не сортированном порядке). \nLinkedHashSet - множество которое сохраняет порядок добавления элементов. \nTreeSet - множество сортированных объектов.',81,0),
(225,'\0','HashSet - множество сортированных объектов. \nLinkedHashSet - множество не сортированных объектов (элементы хранятся в не сортированном порядке). \nTreeSet - множество которое сохраняет порядок добавления элементов.',81,0),
(226,'\0','HashSet - множество которое сохраняет порядок добавления элементов. \nLinkedHashSet - множество сортированных объектов. \nTreeSet - множество не сортированных объектов (элементы хранятся в не сортированном порядке).',81,0),
(227,'','List.Set.Queue',82,0),
(228,'\0','List.Map.Queue.',82,0),
(229,'\0','List.Map.LinkedHashSet.Set',82,0),
(230,'','List synchList = Collections.synchronizedList(new ArrayList()); \nMap synchMap = Collections.synchronizedMap(new HashMap());',83,0),
(231,'\0','Унаследовавшись от класса Thread и вызвав у него метод start()',83,0),
(232,'\0','List synchList = Collections.serializableList(new ArrayList()); \nMap synchMap = Collections.serializableMap(new HashMap());',83,0),
(233,'','Set - множество объектов которое исключает наличие дубликатов.',84,0),
(234,'\0','Set - связный список объектов которое исключает наличие дубликатов.',84,0),
(235,'\0','Set - массив объектов которое исключает наличие дубликатов.',84,0),
(236,'','Collections методом sort()',85,0),
(237,'','Компаратором.',85,0),
(238,'\0','Сравнения и перестановки',85,0),
(239,'','Удалить элемент можно при помощи метода remove() по индексу или по объекту.',86,0),
(240,'\0','Удалить элемент можно при помощи метода delete() по индексу или по объекту.',86,0),
(241,'\0','Удалить элемент можно при помощи метода destroy() по индексу или по объекту.',86,0),
(242,'','Унаследовавшись от класса Thread и вызвав у него метод start() при вызове метода run();',87,0),
(243,'','Реализовать интерфейс Runnable и передать объект этого класса в конструктор класса Thread, и уже там вызывать start().',87,0),
(244,'','Объявить переменную класса Thread и в конструкторе передать ему сам объект, реализовать метод start в котором будет \nвызываться метод start переменной Thread.',87,0),
(246,'','Нет',88,0),
(247,'\0','Да',88,0),
(248,'','Поток завершается при выходе из метода Run(),
Класса реализующего интерфейс Runnable(или наследующего класс Thread).',89,0),
(249,'','System.exit(0);',89,0),
(251,'','Системная синхронизация с использованием wait/notify.',90,0),
(252,'','Системная синхронизация с использованием join.',90,0),
(253,'','Использование классов из пакета java.util.concurrent.',90,0),
(255,'','wait() - отдает (освобождает) монитор объекта, так что другие потоки теперь могут его (монитор) захватить. \nnotify() - пробуждает только один поток. \nnotifyAll() - пробуждает все потоки.',91,0),
(256,'\0','wait() - пробуждает только один поток. \nnotify() - отдает (освобождает) монитор объекта, так что другие потоки теперь могут его (монитор) захватить. \nnotifyAll() - пробуждает все потоки.',91,0),
(257,'\0','wait() - отдает (освобождает) монитор объекта, так что другие потоки теперь могут его (монитор) захватить. \nnotify() - пробуждает все потоки. \nnotifyAll() - пробуждает только один поток.',91,0),
(258,'','Без параметров -\"усыпляет\" данный поток пока на нем не вызовут notify. \nС параметрами - поток спит положенный тайм аут и если по истечении этого времени на нем не вызывают notify то он просыпается.',92,0),
(259,'\0','Без параметров - поток спит положенный тайм аут и если по истечении этого времени на нем не вызывают notify то он просыпается. \nС параметрами - \"усыпляет\" поток пока на нем не вызовут notify.',92,0),
(260,'','Когда задача вызывает метод yield(),
 она меняет состояние потока из running в runnable.',93,0),
(261,'\0','Когда задача вызывает метод yield(),
 она меняет состояние потока из running в sleeping.',93,0),
(262,'\0','Когда задача вызывает метод yield(),
 она меняет состояние потока из running в waiting.',93,0),
(263,'','Метод sleep(),
 состояние изменяется с running на waiting/sleeping. \nМетод wait(),
 заставляет заснуть текущий поток.',94,0),
(264,'\0','Метод sleep(),
 состояние изменяется с running на waiting/runnable. \nМетод wait(),
 заставляет проснуться текущий поток.',94,0),
(265,'\0','Метод sleep(),
заставляет заснуть текущий поток. \nМетод wait(),
 состояние изменяется с running на waiting/sleeping.',94,0),
(266,'','Каждый поток может вызвать метод join,чтобы дождаться завершения другого потока перед своим продолжением.',95,0),
(267,'\0','Метод взаимной блокировки, при котором несколько потоков продолжают свою работу, но попадают в зацикленность при попытке \nполучения каких-либо ресурсов.',95,0),
(268,'\0','Каждый поток может вызвать метод join,чтобы не дождаться завершения другого потока перед своим продолжением.',95,0),
(269,'','wait(); \nsleep();',96,0),
(270,'\0','yield(); \nnotify();',96,0),
(271,'\0','wait(); \nnotifyAll();',96,0),
(272,'','Когда синхронизированные методы ждут пока освободятся ресурсы,занимаемые другим методом',97,0),
(273,'\0','Тип взаимной блокировки, при котором несколько потоков продолжают свою работу, но попадают в зацикленность при попытке\nполучения каких-либо ресурсов.',97,0),
(274,'\0','Когда методы не синхронизированны',97,0),
(275,'','\"Livelock\"- Тип взаимной блокировки, при котором несколько потоков продолжают свою работу, но попадают в зацикленность \nпри попытке получения каких-либо ресурсов.',98,0),
(276,'\0','\"Livelock\"- Когда синхронизированные методы ждут пока освободятся ресурсы,занимаемые другим методом',98,0),
(277,'','Поток завершается при выходе из метода Run(),
Класса реализующего интерфейс Runnable(или наследующего класс Thread).',99,0),
(278,'','System.exit(0);',99,0),
(280,'','Синхронизация происходит на объекте которому принадлежит метод.',100,0),
(281,'\0','Синхронизация происходит на объекте к которому обращается метод.',100,0),
(282,'','volatile - означает что значение переменной будет изменяться потоками, используется чтобы не потерять изменения внесенные \nдругим потоком.',101,0),
(283,'\0','volatile - означает что значение переменной не будет изменяться потоками, используется чтобы не отслеживать изменения внесенные \nдругим потоком.',101,0),
(284,'','Квант.',102,0),
(385,'\0','Секунда.',102,0),
(386,'\0','Наносекунда.',102,0),
(387,'\0','Минута.',102,0),
(285,'\0','Да',103,0),
(286,'','Нет',103,0),
(287,'\0','Оба варианта.',103,0),
(391,'\0','Да.',104,0),
(392,'','Нет.',104,0),
(393,'\0','Ни одно из приведенных утверждений не верно.',104,0),
(394,'\0','Изменить приоритет можно только до запуска - RUNNABLE.',105,0),
(395,'\0','Изменить приоритет можно только до запуска - BLOCKED.',105,0),
(396,'','Изменить приоритет можно только до запуска - NEW.',105,0),
(397,'\0','Изменить приоритет можно только до запуска - WAITING.',105,0),
(398,'\0','Изменить приоритет можно только до запуска - TERMINATED.',105,0),
(288,'','Вводить, удалять, выделять текст, перемещать курсор.',106,0),
(289,'\0','Вводить, удалять, выделять текст.',106,0),
(290,'\0','перемещать курсор.',106,0),
(399,'\0','RUNNABLE.',107,0),
(400,'','NEW.',107,0),
(401,'\0','BLOCKED.',107,0),
(402,'\0','WAITING .',107,0),
(403,'','TERMINATED.',107,0),
(291,'','Блокировка одиночного доступа.',108,0),
(404,'\0','Блокировка множественного доступа.',108,0),
(405,'\0','Блокировка всех потоков сразу.',108,0),
(406,'\0','Блокировка указанных потоков.',108,0),
(407,'','Для создания синхронизированного блока.',109,0),
(408,'\0','Для создания синхронизированной переменной.',109,0),
(409,'\0','Для создания синхронизированного оператора.',109,0),
(410,'','Для создания синхронизированного запроса.',109,0),
(411,'\0','Для создания синхронизированного потока.',109,0),
(292,'','Если запрос выполняется часто и особенно с большим количеством условий, то лучше использовать PreparedStatement.',110,0),
(323,'','Если запрос используется не часто или простой, то можно использовать Statement.',110,0),
(324,'\0','Если запрос выполняется часто и особенно с большим количеством условий, то лучше использовать Statement.',110,0),
(325,'\0','Если запрос используется не часто или простой, то можно использовать PreparedStatement.',110,0),
(412,'\0','Нет.',111,0),
(416,'\0','От 0 до 9.',112,0),
(417,'\0','От 1 до 11.',112,0),
(418,'','От 1 до 10.',112,0),
(419,'\0','От 0 до 10.',112,0),
(293,'','lazy-initialization -  заключается в том, что при запросе к базе в выборку загружаются не объекты, а ссылки на них.',113,0),
(294,'\0','lazy-initialization -  заключается в том, что при запросе к базе в выборку загружаются не ссылки, а объекты.',113,0),
(414,'\0','Группа последовательных операций с базой данных, которая может быть выполнена не целиком.',114,0),
(415,'','Группа последовательных операций с базой данных, которая должна быть выполнена целиком.',114,0),
(295,'','forward - происходит на стороне сервера, передача управления другому сервлету у браузера не меняется ссылка. \nredirect - происходит в два этапа (передача нового URL браузеру, получение контента).',115,0),
(296,'\0','forward - происходит в два этапа (передача нового URL браузеру, получение контента). \nredirect -  происходит на стороне сервера, передача управления другому сервлету у браузера не меняется ссылка.',115,0),
(617,'','Требование, предъявляемое к структуре таблиц в теории реляционных баз данных для устранения из базы избыточных функциональных \nзависимостей между атрибутами (полями таблиц).',116,0),
(618,'\0','Требование, предъявляемое к структуре таблиц в теории реляционных баз данных для создания нескольких атомарных атрибутов, \nкоторые могут быть определены на одном или разных доменах.',116,0),
(619,'\0','Требование, предъявляемое к структуре таблиц в теории реляционных баз данных для функциональной зависимости от какого-либо \nиз входящих в него атрибутов.',116,0),
(620,'\0','Требование, предъявляемое к структуре таблиц в теории реляционных баз данных для отсутствия зависимостей и атрибутов \nпервичного ключа от не ключевых атрибутов.',116,0),
(297,'\0','1.',117,0),
(420,'\0','3.',117,0),
(421,'\0','5.',117,0),
(422,'\0','8.',117,0),
(423,'','10.',117,0),
(481,'\0','Да.',118,0),
(482,'','Нет.',118,0),
(476,'','Сравнение.',119,0),
(477,'','Сортировка.',119,0),
(478,'\0','Вставка.',119,0),
(479,'','Копирование.',119,0),
(480,'\0','Замещение.',119,0),
(471,'','Если она сохраняет относительный порядок элементов с одинаковыми значениями ключа.',120,0),
(472,'\0','Если она не сохраняет относительный порядок элементов с одинаковыми значениями ключа.',120,0),
(473,'\0','Если она не удаляет относительный порядок элементов с одинаковыми значениями ключа.',120,0),
(474,'\0','Если она копирует относительный порядок элементов с одинаковыми значениями ключа.',120,0),
(475,'\0','Если она не заменяет относительный порядок элементов с одинаковыми значениями ключа.',120,0),
(467,'\0','Люди лучше справляются с изобретением новых алгоритмов.',121,0),
(469,'\0','Человек знает как сортировать, а компьютеру необходимо все объяснять.',121,0),
(470,'','Компьютер за один раз может сравнивать только два объекта.',121,0),
(298,'\0','Вставкой.',122,0),
(342,'','Сортировкой.',122,0),
(343,'\0','Поиском.',122,0),
(344,'\0','Удалением.',122,0),
(464,'','Наименее эффективный, но самый простой алгоритм.',123,0),
(465,'\0','Наиболее эффективный, но самый простой алгоритм.',123,0),
(466,'\0','Средне эффективный, но самый простой алгоритм.',123,0),
(299,'','Нормализация — это процесс организации данных в базе данных.',124,0),
(321,'\0','Нормализация — это свойство отношения в реляционной модели данных, характеризующее его с точки зрения избыточности.',124,0),
(322,'\0','Нормализация — это свойство потенциально приводящее к логически ошибочным результатам выборки или изменения данных.',124,0),
(326,'\0','Конкретный элемент данных.',125,0),
(327,'\0','Конкретный объект.',125,0),
(328,'','Часть записи.',125,0),
(329,'\0','Часть алгоритма',125,0),
(317,'','Если потенциальных ключей несколько, один из них выбирается в качестве первичного.',126,0),
(318,'','Если в отношении имеется единственный потенциальный ключ, он является  первичным ключом.',126,0),
(319,'\0','Если первичный ключ состоит из единственного атрибута, он является  первичным ключом.',126,0),
(320,'\0','Если первичный ключ состоит из двух и более атрибутов, он является  первичным ключом.',126,0),
(300,'','Внешний ключ (FK) — это столбец или сочетание столбцов, которое применяется для принудительного установления связи между \nданными в двух таблицах.',127,0),
(316,'\0','Внешний ключ (FK) — это столбец или сочетание столбцов, которое используются для объединения таблиц.',127,0),
(338,'\0','Сортировкой.',128,0),
(339,'','Ключом.',128,0),
(340,'\0','Составным ключом.',128,0),
(341,'\0','Простым ключом.',128,0),
(301,'','Типы - LEFT, RIGHT, INNER, OUTER JOIN.',129,0),
(302,'\0','Типы - DAWN, UP, INNER, OUTER JOIN.',129,0),
(303,'\0','Оба варианта.',129,0),
(447,'\0','Да.',130,0),
(448,'','Нет.',130,0),
(449,'','Зависимость сложности алгоритма от количества элементов.',131,0),
(450,'\0','Время выполнения алгоритма для структуры данных заданного размера.',131,0),
(451,'\0','Время выполнения алгоритма для заданного количества элементов.',131,0),
(452,'\0','Зависимость размера структуры данных от количества элементов.',131,0),
(453,'\0','Линейное.',132,0),
(454,'','Постоянное.',132,0),
(455,'\0','Текущее.',132,0),
(456,'\0','N.',132,0),
(304,'','Если equals возвращает true, то hashCode должен вернуть одно и то же значение.',198,0),
(305,'\0','Если equals возвращает true, то hashCode должен вернуть false.',198,0),
(306,'\0','Если equals возвращает false, то hashCode должен вернуть true.',198,0),
(313,'\0','Применимо к отдельным строкам.',133,0),
(314,'','Применимо к  группам строк.',133,0),
(315,'\0','Оба варианта.',133,0),
(462,'','Условие,которое остается неизменным на протяжении всего времени работы алгоритма.',134,0),
(463,'\0','Условие,которое может изменятся на протяжении работы алгоритма.',134,0),
(428,'\0','Сравнению.',135,0),
(429,'\0','Сортировке.',135,0),
(430,'','Возведению в степень.',135,0),
(431,'\0','Копированию.',135,0),
(432,'\0','Кводратному уравнению.',135,0),
(433,'\0','1.',136,0),
(434,'\0','10.',136,0),
(435,'','3.',136,0),
(436,'\0','6.',136,0),
(437,'\0','9.',136,0),
(443,'\0','3.',137,0),
(444,'','6.',137,0),
(445,'\0','12.',137,0),
(446,'\0','24.',137,0),
(330,'','Представляет собой шаблон для создания объектов.',139,0),
(331,'\0','Представляет конкретный объект реального мира.',139,0),
(332,'\0','Хранит конкретные значения в своих полях.',139,0),
(333,'\0','Задает тип метода.',139,0),
(334,'\0','Эквивалентен классу.',140,0),
(335,'','Может содержать даты и методы.',140,0),
(336,'\0','Является программой.',140,0),
(337,'\0','Может содержать классы.',140,0),
(354,'\0','Оператор new;',141,0),
(355,'\0','Оператор throw;',141,0),
(356,'\0','Оператор throws;',141,0),
(357,'','Оператор точка.',141,0),
(358,'\0','Оператор запятая.',141,0),
(359,'\0','Ссылочными типами.',142,0),
(360,'','Типами данных.',142,0),
(361,'\0','Данными типов.',142,0),
(362,'\0','Частью базы данных.',142,0),
(363,'\0','Ни одно из приведенных утверждений не верно.',142,0),
(364,'\0','Выполняется за время,пропорциональное размеру массива.',143,0),
(365,'\0','Требует нескольких сравнений.',143,0),
(366,'\0','Требует сдвига других элементов для освобождения места.',143,0),
(367,'','Выполняется за постоянное время независимо от количества элементов.',143,0),
(368,'','Да.',144,0),
(369,'\0','Нет.',144,0),
(370,'\0','Увеличивает время выполнения всех операций.',145,0),
(371,'','Увеличивает время поиска в некоторых ситуациях.',145,0),
(372,'\0','Всегда увеличивает время вставки.',145,0),
(373,'\0','Иногда уверичивает время вставки.',145,0),
(374,'\0','Нет.',146,0),
(375,'','Да.',146,0),
(376,'\0','exdends.',147,0),
(377,'','new.',147,0),
(378,'\0','implements.',147,0),
(379,'\0','instanceof.',147,0),
(424,'\0','Намного быстрее выполняется удаление.',148,0),
(425,'\0','Быстрее выполняется вставка.',148,0),
(426,'\0','Быстрее выполняется создание.',148,0),
(427,'','Быстрее выполняется поиск.',148,0),
(438,'\0','200.',149,0),
(439,'','8.',149,0),
(440,'\0','1.',149,0),
(441,'\0','13.',149,0),
(442,'\0','25.',149,0),
(457,'','Переменные примитивных типов.',150,0),
(458,'\0','Классы.',150,0),
(459,'','Объекты.',150,0),
(460,'\0','Интерфейсы.',150,0),
(461,'\0','Все варианты.',150,0),
(483,'\0','Перемещения и копирования.',151,0),
(484,'','Сравнения и перестановки.',151,0),
(486,'\0','Перемещения и сравнивания.',151,0),
(487,'\0','Копирования и сравнивания.',151,0),
(488,'\0','Да.',152,0),
(489,'','Нет.',152,0),
(490,'\0','Элементы с наибольшими значениями ключа накапливаются слева(малые значения индексов).',153,0),
(491,'','Многократно находится значение минимального ключа.',153,0),
(492,'\0','Для правильной вставки каждого элемента приходится сдвигать несколько элементов.',153,0),
(493,'\0','Отсортированные элементы накапливаются справа.',153,0),
(494,'\0','Да.',154,0),
(495,'','Нет.',154,0),
(496,'\0','1 раз.',155,0),
(497,'\0','2 раза.',155,0),
(498,'','3 раза.',155,0),
(499,'\0','4 раза.',155,0),
(500,'\0','5 раз.',155,0),
(501,'','Сортируются элементы с индексами, меньшими.',156,0),
(693,'\0','Сортируются элементы с индексами, большими.',156,0),
(694,'','Сортируются элементы с индексами, равными внешним.',156,0),
(502,'\0','Что некоторые элементы уже отсортированы, но возможно, их еще придется перемещать.',157,0),
(503,'\0','Что большинство элементов находится в своих окончательных позициях сортировки, но некоторые из них еще требуют сортировки.',157,0),
(504,'\0','Что отсортированы только некоторые из элементов.',157,0),
(505,'','Что элементы группы отсортированы между собой, но возможно, в группу еще придется вставлять элементы.',157,0),
(506,'\0','Сравнения.',158,0),
(507,'\0','Вставки.',158,0),
(508,'','Копированния.',158,0),
(509,'\0','Поиска.',158,0),
(510,'\0','Сортировки.',158,0),
(511,'\0','Не будет перемещаться в дальнейшем.',159,0),
(512,'','Не будет сдвигаться влево.',159,0),
(513,'\0','Частично будет перемещаться за пределы группы.',159,0),
(514,'\0','Столкнется с тем, что размер группы неуклонно уменьшается.',159,0),
(515,'','Элементы с индексами, меньшими внешним, частично отсортированы.',160,0),
(516,'\0','Элементы с индексами, большими внешним, частично отсортированы.',160,0),
(517,'\0','Элементы с индексами, равными внешним, частично отсортированы.',160,0),
(518,'\0','Элементы с вторичными ключами исключаются из сортировки.',161,0),
(519,'','При сортировке списка городов по штату сохраняется сортировка городов.',161,0),
(520,'\0','Фамилии ассоциируются с теми же именами.',161,0),
(521,'\0','Элементы сохраняют постоянный порядок первичных ключей независимо от порядка вторичных ключей.',161,0),
(526,'\0','Операция извлечения из стека значительно проще, чем из очереди.',162,0),
(527,'','В очереди возможен циклический перенос, а в стеке нет.',162,0),
(528,'\0','Вершина стека является полным аналогом начала очереди.',162,0),
(529,'\0','Как в стеке, так и в очереди последовательно удаляемые элементы располагаются в ячейках с нарастающими значениями индексов массива.',162,0),
(530,'\0','Да.',163,0),
(531,'','Нет.',163,0),
(532,'\0','Не существует числового соответствия между индексами ячеек и номерами людей в очереди.',164,0),
(533,'','Индексы ячеек массива и номера людей в очереди возрастают в противоположных направлениях.',164,0),
(534,'\0','Индексы ячеек массива совпадают с номерами людей в очереди.',164,0),
(535,'\0','Номера людей в очереди и индексы элементов массива и индексы ячеек массива двигаются в одном направлении.',164,0),
(536,'\0','От младших индексов к старшим.',165,0),
(537,'\0','От старших к младшим.',165,0),
(538,'','Он вообще не перемещается.',165,0),
(539,'\0','Да.',166,0),
(540,'\0','Нет.',166,0),
(541,'','За О(1).',166,0),
(542,'\0','за О(2).',166,0),
(543,'\0','Элементов, автоматически сортируемых при вставке.',167,0),
(544,'\0','Сообщений о неминуемых внешних угрозах для звездолета Энтерпрайз.',167,0),
(545,'','Клавиш, нажатых пользователем в процессе написания письма.',167,0),
(546,'\0','Символических имен обрабатываемого алгебраического выражения.',167,0),
(547,'\0','О(1).',168,0),
(548,'','О(N).',168,0),
(549,'\0','О(log n).',168,0),
(550,'\0','O(N!).',168,0),
(551,'\0','Элементы с наибольшим приоритетом вставляются первыми.',169,0),
(552,'\0','Програмист должен организовать приоритетный доступ к базовому массиву.',169,0),
(553,'','Базовый массив сортируется в соответствии с приоритетом элементов.',169,0),
(554,'\0','Низкоприоритетные элементы удаляются первыми.',169,0),
(555,'\0','Элемент с минимальным приоритетом извлекается из массива сложнее, чем из приоритетной очереди.',170,0),
(556,'','Массив должен быть упорядочен, а для приоритетной очереди это не обязательно.',170,0),
(557,'\0','Элемент с максимальным приоритетом извлекается из приоритетной очереди сложнее, чем из массива.',170,0),
(558,'\0','Все вышеперечисленное.',170,0),
(559,'\0','Ничего из вышеперечисленного.',170,0),
(560,'','Пассажиров, которых такси должно подобрать в разных частях города.',171,0),
(561,'\0','Нажатий клавиш на клавиатуре.',171,0),
(562,'\0','Полей шахматной доски в игровой программе.',171,0),
(563,'\0','Планет в модели Солнечной системы.',171,0),
(567,'','Первый элемент.',172,0),
(568,'\0','Второй элемент.',172,0),
(569,'\0','Последний элемент.',172,0),
(570,'\0','Другой связный список.',172,0),
(571,'\0','Все вышеперечисленные варианты.',172,0),
(572,'\0','Первый элемент списка.',173,0),
(573,'','Элемент, соответствующий current;.',173,0),
(574,'\0','Элемент, соответствующий next;.',173,0),
(575,'\0','Произвольный элемент.',173,0),
(576,'\0','1.',174,0),
(577,'','2.',174,0),
(578,'\0','3.',174,0),
(579,'\0','4.',174,0),
(580,'\0','5.',174,0),
(581,'\0','current.hasNext(current.Remove);',175,0),
(582,'\0','current.next == null;',175,0),
(691,'\0','current.hasNext(current.Delete);',175,0),
(692,'','current.next = null;',175,0),
(583,'','Поддерживает доступ с любого из двух концов.',176,0),
(584,'\0','Является другим названием для двусвязного списка.',176,0),
(585,'\0','Содержит указатели, обеспечивающие как прямое, так и обратное перемещение между элементами.',176,0),
(586,'\0','Связывает последний элемент с первым.',176,0),
(587,'\0','Он помещается в кучу.',177,0),
(588,'\0','Он помещается в стек.',177,0),
(589,'','Он уничтожается сборщиком мусора Java.',177,0),
(590,'\0','Ничего не происходит.',177,0),
(591,'\0','Равный список.',178,0),
(592,'','Пустой список.',178,0),
(593,'\0','Полный список.',178,0),
(594,'\0','Положительный список.',178,0),
(595,'\0','Отрицательный список.',178,0),
(596,'\0','В не сортированном массиве.',179,0),
(597,'','В связном списке.',179,0),
(598,'\0','Одно, если в элементах хранится ссылка на следующий элемент.',180,0),
(599,'\0','Одно, если в элементах хранится ссылка на предыдущий элемент.',180,0),
(600,'\0','Зависит от ситуации.',180,0),
(601,'\0','Ни один из вышеперечисленных вариантов.',180,0),
(602,'\0','Сортировки методом вставки в связном списке.',181,0),
(603,'','Вставки нового элемента в начало списка.',181,0),
(604,'\0','Перестановки двух элементов в произвольных позициях.',181,0),
(605,'\0','Удаления всех элементов с заданным ключом.',181,0),
(606,'','Односвязный список.',182,0),
(607,'\0','Массив.',182,0),
(608,'\0','Нерекурсивная природа.',183,0),
(609,'','Более высокие затраты памяти.',183,0),
(610,'\0','Хотя сортировка слиянием по скорости превосходит сортировку методом вставок, она значительно медленнее быстрой сортировки.',183,0),
(611,'\0','Сложность реализации.',183,0),
(612,'\0','Куча.',184,0),
(613,'','Стек.',184,0),
(614,'\0','Связный список.',184,0),
(615,'\0','Массив.',184,0),
(616,'\0','Очередь.',184,0),
(621,'\0','На разбиении массива.',185,0),
(622,'\0','На перестановке соседних элементов.',185,0),
(623,'','На решении проблемы элементов, находящихся на больших расстояниях.',185,0),
(624,'\0','На предварительном выполнении обычной сортировки методом вставки.',185,0),
(625,'\0','1.',186,0),
(626,'\0','10.',186,0),
(627,'\0','100.',186,0),
(628,'','40.',186,0),
(629,'\0','80.',186,0),
(630,'\0','Замена 1 на h.',187,0),
(631,'\0','Вставка алгоритма создания интервалов уменьшающейся ширины.',187,0),
(632,'\0','Заключение обычной сортировки методом вставки в цикл.',187,0),
(633,'','Изменение направления смещение индексов во внутреннем цикле.',187,0),
(634,'\0','Да.',188,0),
(635,'','Нет.',188,0),
(636,'\0','O(n2),
 O(n*log n).',189,0),
(637,'','O(n*log n),
 O(n2).',189,0),
(638,'\0','O(log log n),
 O(2nε).',189,0),
(639,'\0','O(1),
 O(α(n)).',189,0),
(640,'\0','2poly(n),
 O(n log n).',189,0),
(641,'','Группировка всех элементов, больших некоторого значения, у одного конца массива.',190,0),
(642,'\0','Деление массива пополам.',190,0),
(643,'\0','Частичная сортировка частей массива.',190,0),
(644,'\0','Раздельная сортировка каждой половины массива.',190,0),
(645,'\0','Верхним.',191,0),
(646,'\0','Нижним.',191,0),
(647,'\0','Внешним.',191,0),
(648,'','Опорным.',191,0),
(649,'\0','Внутренним.',191,0),
(650,'\0','Индекс элемента между левым и правым подмассивами.',192,0),
(651,'\0','Значение ключа элемента между левым и правым подмассивами.',192,0),
(652,'','Индекс левого элемента правого подмассива.',192,0),
(653,'\0','Значение ключа левого элемента правого подмассива.',192,0),
(654,'\0','Разбиением левой стороны правого подмассива.',193,0),
(655,'\0','Разбиением правой стороны левого подмассива.',193,0),
(656,'','Разбиением полученных подмассивов.',193,0),
(657,'\0','Разбиением на левый и правый подмассив.',193,0),
(658,'\0','Используется для определения медианы массива.',194,0),
(659,'','Меняется с элементами правого подмассива.',194,0),
(660,'\0','Используется в качестве отправной точки следующего разбиения.',194,0),
(661,'\0','Уничтожается.',194,0),
(662,'\0','Меняется с элементами левого подмассива.',194,0),
(663,'\0','Верхнего элемента.',195,0),
(664,'\0','Нижнего элемента.',195,0),
(665,'\0','Внешнего элемента.',195,0),
(666,'','Опорного элемента.',195,0),
(667,'\0','Внутреннего элемента.',195,0),
(685,'\0','Корень является потомком корня основного дерева.',196,0),
(686,'\0','Корень не связан с корнем основного дерева.',196,0),
(687,'','Количество узлов меньше, чем в основном дереве.',196,0),
(688,'\0','Существует одноранговый узел с таким же количеством узлов.',196,0),
(689,'','Да.',197,0),
(690,'\0','Нет.',197,0),
(158,'\0','Да. Можно.',49,0),
(165,'\0','Нет.',72,0),
(413,'','Да.',111,0),
(64,'','Механизм языка программирования, который ограничивает доступ к составляющим объект компонентам делает их приватными, т.е. \nДоступными только внутри объекта.',18,0),
(702,'\0','Меньше А, и больше либо равен узлов правого поддерева А.',202,0),
(1364,'\0','java -java',10,0),
(1361,'\0','Доступ к переменной невозможно получить.',39,0),
(1362,'\0','3^32',78,0),
(250,'\0','В котором значения большинства ключей больше среднего арифметического.',200,0),
(1365,'\0','Механизм объектно-ориентированного программирования позволяющий описать новый класс на основе уже существующих (родительских, базовых)\nклассов.',15,0),
(1368,'\0','Возможность придание объекту характеристик, которые четко определяют его концептуальные границы.',16,0),
(63,'','В каком отношении (больше/меньше) ключ текущего узла находится с искомым ключом.',199,0),
(1363,'\0','Set.AbstractCollection.Map',82,0),
(245,'\0','На каком уровне находится текущая позиция поиска.',199,0),
(1155,'\0','INSERT INTO students SELECT VALUES (95, \'Bill\', \'Enzo\').',312,0),
(145,'\0','В каком отношении (больше/меньше) ключ текущего узла находится с его правым или левым потомком.',199,0),
(146,'\0','Не является ли текущий листовой узел искомым.',199,0),
(254,'\0','Обладающее непредсказуемым поведением.',200,0),
(279,'','В котором количество левых потомков у корневого или другого узла значительно превышает количество правых потомков(или наоборот).',200,0),
(468,'\0','Компьютер может работать с данными фиксированного размера.',121,0),
(695,'\0','Имеющее форму зонтика.',200,0),
(696,'\0','Удаление.',201,0),
(697,'\0','Копирование.',201,0),
(698,'','Поиск.',201,0),
(699,'\0','Сравнение.',201,0),
(700,'\0','Меньше А, и больше либо равен узлов левого поддерева А.',202,0),
(701,'\0','Больше А, но меньше либо равен узлов правого поддерева А.',202,0),
(703,'','Больше А, но меньше либо равен узлов левого поддерева А.',202,0),
(704,'\0','Оба потомка узла оператора должны быть операндами.',203,0),
(705,'\0','После обхода в обратном порядке не нужно добавлять круглые скобки.',203,0),
(706,'\0','После обхода в симметричном порядке необходимо добавлять круглые скобки.',203,0),
(707,'','При обходе в прямом порядке узел посещается ранее любого из потомков.',203,0),
(708,'\0','2*n - 1.',204,0),
(709,'\0','2 n + 1.',204,0),
(710,'','2*n + 1.',204,0),
(711,'','2*n.',204,0),
(785,'','2 n.',204,0),
(712,'\0','Да.',205,0),
(713,'','Нет.',205,0),
(714,'\0','Сортировки.',206,0),
(715,'\0','Копирования.',206,0),
(716,'','Сжатия.',206,0),
(717,'\0','Удаления.',206,0),
(718,'\0','Перестановки.',206,0),
(719,'\0','Наиболее часто используемые символы всегда находятся ближе к вершине дерева.',207,0),
(720,'\0','При декорировании сообщения обычно приходится многократно проходить от корня к листовому узлу.',207,0),
(721,'','При кодировании символа алгоритм обычно начинается с листового узла и двигается наверх.',207,0),
(722,'\0','Для генерирования дерева могут использоваться операции извлечения и вставки в приоритетной очереди.',207,0),
(723,'\0','Копировании.',208,0),
(724,'','Вставке.',208,0),
(725,'\0','Удалении.',208,0),
(726,'\0','Доступе.',208,0),
(727,'\0','Может потребоваться изменение структуры дерева при поиске.',209,0),
(728,'','Пути от корня до всех листовых узлов имеют примерно одинаковую длину.',209,0),
(729,'\0','Все левые поддеревья имеют такую же высоту как, и все правые поддеревья.',209,0),
(730,'\0','Высота всех поддеревьев жестко контролируется.',209,0),
(731,'\0','Все правые поддеревья имеют такую же высоту как, и все левые поддеревья.',209,0),
(732,'\0','Да.',210,0),
(733,'','Нет.',210,0),
(734,'\0','Потомок который не существует, но будет создан на следующем шаге.',211,0),
(735,'\0','Потомок не имеющий собственных потомков.',211,0),
(736,'\0','Один из двух потенциальных потомков листового узла, в котором будет выполнена операция вставки.',211,0),
(737,'','Несушествующий левый потомок узла, у которого имеется правый потомок(или наоборот).',211,0),
(738,'\0','Все пути от корня к узлу или пустому потомку должны содержать одинаковое количество черных узлов.',212,0),
(739,'','Если узел черный, то его потомки должны быть красными.',212,0),
(740,'\0','Корень всегда окрашен а черный цвет.',212,0),
(741,'\0','Все три предшествующих утверждения являются красно-черными правилами.',212,0),
(742,'\0','Линейное пробирование.',213,0),
(743,'','Поворот.',213,0),
(744,'\0','Разбиение корневого узла.',213,0),
(745,'\0','Разбиение полученных подмассивов.',213,0),
(746,'','Изменение цвета узлов.',213,0),
(747,'\0','Черный.',214,0),
(748,'','Красный.',214,0),
(749,'\0','Белый.',214,0),
(750,'\0','Синий.',214,0),
(751,'\0','Задается программистом.',214,0),
(752,'\0','Передачи аргументов по ссылке.',215,0),
(753,'\0','Ограничения доступа к полям и методам.',215,0),
(754,'\0','Статических полей.',215,0),
(755,'\0','Статических методов.',215,0),
(756,'','Виртуальных методов.',215,0),
(757,'\0','Защищённых полей.',215,0),
(758,'\0','Модульность.',216,0),
(759,'','Наследование.',216,0),
(760,'\0','Однозначность.',216,0),
(761,'','Полиморфизм.',216,0),
(762,'\0','Разделение обязанностей.',216,0),
(763,'','Инкапсуляция.',216,0),
(764,'\0','Класс - это исходный код, а объект - скомпилированный и выполняемый код.',217,0),
(765,'\0','Класс описывает категорию, к которой могут либо принадлежать, либо не принадлежать объекты данного класса.',217,0),
(766,'\0','Класс может иметь много экземпляров, а объект - один или ни одного.',217,0),
(767,'','Класс может инстанциировать объекты, а сам объект - нет.',217,0),
(768,'\0','Объект - это экземпляр класса.',217,0),
(769,'\0','Да.',218,0),
(770,'','Нет.',218,0),
(771,'\0','Персистентность.',219,0),
(772,'','Полиморфизм.',219,0),
(773,'\0','Инкапсуляция.',219,0),
(774,'\0','Агрегация.',219,0),
(775,'\0','Композиция.',219,0),
(776,'\0','Сокрытием реализации.',220,0),
(777,'','Тем, что класс спланирован с единственным и конкретным назначением.',220,0),
(778,'\0','Разрешением одному объекту быть видимым как разные типы.',220,0),
(779,'\0','тем, как много классы знают про другие только через их API.',220,0),
(780,'','Это процесс создания классов более высокого уровня, от которых можно создать более специфические сущности.',221,0),
(781,'\0','Это процесс сокрытия компонентов данных и кода, реализующего функциональность, за некоторым интерфейсом.',221,0),
(782,'\0','Это механизм, позволяющий создавать классы объектов на основе других классов, расширяя и частично изменяя их функциональность \nи набор атрибутов.',221,0),
(783,'\0','Это принцип ООП согласно которому каждый объект может использоваться более чем в одной программе.',221,0),
(784,'\0','Это механизм, который объединяет данные и методы, манипулирующие этими данными, и защищает и то и другое от внешнего вмешательства \nили неправильного использования.',221,0),
(786,'\0','В системе имеется хотя бы один \"наследник\".',222,0),
(787,'','В любом месте, где допустимо использование объекта, принадлежащего классу-предку, точно также допустимо использование класса-наследника.',222,0),
(788,'\0','В любом месте, где допустимо использование объекта, принадлежащего классу-наследнику, точно также допустимо использование класса-предка.',222,0),
(789,'\0','Указывает на логическое включение.',223,0),
(790,'','Указывает на физическое включение.',223,0),
(791,'','Частный случай агрегации.',223,0),
(792,'\0','Является отношением is-a.',223,0),
(793,'','Является отношением part-of.',223,0),
(794,'','Является отношением has-a.',223,0),
(795,'\0','Тип, описывающий поведение некоторой сущности.',224,0),
(796,'','Тип, описывающий характеристики и поведение объекта.',224,0),
(797,'\0','Тип, который отображает состояние некоторого объекта.',224,0),
(798,'\0','Тип, содержащий набор функций.',224,0),
(799,'\0','Полиморфизм никак не связан с наследованием.',225,0),
(800,'\0','Клиенты полиморфных классов всегда знают о всех вариантах реализации полиморфного поведения.',225,0),
(801,'\0','Полиморфизм реализуется только с помощью шаблонов (параметризуемых классов).',225,0),
(802,'','Полиморфизм - это возможность существования разных вариантов реализации одноименного действия.',225,0),
(803,'','Клиенты полиморфных классов могут знать только об их общем интерфейсе.',225,0),
(804,'\0','В производных классах присутствует часть состояния родительского класса.',226,0),
(805,'','Производные классы содержат поля и методы родительского.',226,0),
(806,'\0','Производные классы содержат методы родительского класса.',226,0),
(807,'\0','Производные классы наследуют поля родительского класса.',226,0),
(808,'\0','Производные классы наследуют модификаторы доступа членов родительского класса.',226,0),
(809,'\0','Это процесс сокрытия компонентов данных и кода, реализующего функциональность, за интерфейсом, не позволяющим пользователю искажать данные.',227,0),
(810,'','Это механизм, который защищает данные и методы, манипулирующие этими данными, от внешнего вмешательства или неправильного использования.',227,0),
(811,'\0','Это принцип ООП, согласно которому каждый объект может использоваться более чем в одной программе.',227,0),
(812,'\0','Это механизм, позволяющий создавать классы объектов на основе других классов, расширяя и частично изменяя их функциональность и \nнабор атрибутов.',227,0),
(813,'','Mediator.',228,0),
(814,'\0','Low Coupling.',228,0),
(815,'\0','High Cohesion.',228,0),
(816,'\0','Information Expert.',228,0),
(817,'\0','Observer.',228,0),
(818,'\0','Отношение \"has-a\" всегда реализуется с помощью наследования.',229,0),
(819,'\0','Отношение \"has-a\" требует как минимум две различные сущности.',229,0),
(820,'\0','Отношение \"has-a\" всегда реализуется с помощью полиморфизма.',229,0),
(821,'\0','Отношение \"has-a\" всегда подразумевает сильную связь между объектами.',229,0),
(822,'','Ничего из перечисленного.',229,0),
(823,'\0','В ООП не используются функции и процедуры.',230,0),
(824,'','ООП позволяет объединять состояние объектов и их поведение.',230,0),
(825,'\0','ООП не поддерживает повторное использование компонентов.',230,0),
(826,'\0','ООП поддерживает разработку программ \"сверху-вниз\".',230,0),
(827,'\0','ООП не поддерживает понятие абстракции.',230,0),
(828,'\0','Виртуальные методы.',231,0),
(829,'\0','Динамическое выделение памяти.',231,0),
(830,'','Модификаторы доступа.',231,0),
(831,'\0','Статические методы.',231,0),
(832,'\0','Обработка исключений.',231,0),
(833,'\0','Да.',232,0),
(834,'','Нет.',232,0),
(835,'\0','Repeater.',233,0),
(836,'\0','Callback.',233,0),
(837,'','Observer.',233,0),
(838,'\0','Publisher.',233,0),
(839,'\0','Trigger.',233,0),
(840,'\0','delete A.',234,0),
(841,'','delete from A.',234,0),
(842,'\0','delete table A.',234,0),
(843,'\0','Ни один из вышеперечисленных.',234,0),
(844,'','Да.',235,0),
(845,'\0','Нет.',235,0),
(846,'','desc.',236,0),
(847,'\0','dasc.',236,0),
(848,'\0','abs.',236,0),
(849,'\0','having.',236,0),
(850,'','asc.',236,0),
(851,'\0','SELECT [all] FROM Employers',237,0),
(852,'\0','SELECT *.Employers',237,0),
(853,'','SELECT * FROM Employers',237,0),
(854,'\0','SELECT Employers',237,0),
(855,'\0','150.',238,0),
(856,'\0','0.',238,0),
(857,'\0','Возникнет ошибка: агрегатные функции не могут быть использованы для записей со значениями NULL.',238,0),
(858,'','200.',238,0),
(859,'','INSERT INTO Persons (LastName) VALUES (\'Perez\')',239,0),
(860,'\0','INSERT INTO Persons VALUE (\'Perez\')',239,0),
(861,'\0','INSERT INTO Persons (\'Perez\') INTO LastName',239,0),
(862,'\0','INSERT (\'Perez\') INTO Persons (LastName)',239,0),
(863,'\0','Для снижения нагрузки на сервер с потерей производительности выполнения запроса.',240,0),
(864,'\0','Для ускорения выборки по конкретному полю.',240,0),
(865,'','Для выборки только уникальных записей по каждому полю.',240,0),
(866,'\0','Для выборки количества уникальных записей в таблице.',240,0),
(867,'\0','Такого ключевого слова в стандарте SQL-92 не существует.',240,0),
(868,'','Да.',241,0),
(869,'\0','Нет.',241,0),
(870,'\0','Выражение составлено неверно.',242,0),
(871,'\0','Это выражение создаст пустую таблицу persons с колонками name и surname.',242,0),
(872,'','Это выражение создаст таблицу persons с колонками name и surname и соответствующими данными из таблицы person.',242,0),
(873,'\0','Это выражение создаст таблицу persons с колонками name и surname, соответствующими данными из таблицы person, а так же индексами, \nкак у таблицы person.',242,0),
(874,'\0','Запрос выполнится, но не удалит ни одной записи.',243,0),
(875,'\0','Запрос удалит из таблиц RATE все записи у которых поле id_del=0',243,0),
(876,'','Запрос не выполнится.',243,0),
(877,'\0','Запрос удалит из таблиц RATE все записи у которых поле id_del=1',243,0),
(878,'\0','Запрос удалит из таблиц RATE все записи.',243,0),
(879,'\0','Порядок выборки данных.',244,0),
(880,'','Порядок сортировки результатов.',244,0),
(881,'\0','Порядок сортировки полей при выборке.',244,0),
(882,'\0','Ничего из вышеперечисленного.',244,0),
(883,'\0','При перекрестном соединении (cross join).',245,0),
(884,'\0','При тета-соединении (theta-join).',245,0),
(885,'','При левом внешнем соединении (left outer join).',245,0),
(886,'','При полном внешнем соединении (full outer join).',245,0),
(887,'\0','при естественном соединении (natural join).',245,0),
(888,'','%',246,0),
(889,'\0','|',246,0),
(890,'\0','/',246,0),
(891,'\0','*',246,0),
(892,'\0','OR имеет больший приоритет, нежели AND;',247,0),
(893,'\0','Нужно обязательно использовать скобки для каждого условия;',247,0),
(894,'','AND имеет больший приоритет, нежели OR;',247,0),
(895,'\0','СУБД возвращает ошибку;',247,0),
(896,'','Перестановка узлов для восстановления характеристик дерева двоичного поиска.',248,0),
(897,'\0','Изменение цвета узлов.',248,0),
(898,'\0','Проверка выполнения красно-черных правил.',248,0),
(899,'\0','Попытка восстановления сбалансированности дерева.',248,0),
(900,'','Левым потомком.',249,0),
(901,'\0','Левым поддеревом.',249,0),
(902,'\0','Левым подмассивом.',249,0),
(903,'','Правым потомком.',249,0),
(904,'\0','Правым поддеревом.',249,0),
(905,'\0','Правым подмассивом.',249,0),
(906,'\0','Перед вставкой узла.',250,0),
(907,'\0','После вставки узла.',250,0),
(908,'\0','Во время поиска позиции вставки.',250,0),
(909,'','При поиске узла с заданным ключом.',250,0),
(910,'','Цвет узла.',251,0),
(911,'\0','Цвет одного потомка.',251,0),
(912,'','Цвет двух потомков.',251,0),
(913,'\0','Цвет трех потомков.',251,0),
(914,'\0','Цвет всех узлов.',251,0),
(915,'\0','Находится на другой стороне от своего родителя, чем чем его родитель по отношению к своему \"брату\".',252,0),
(916,'','Находится на той же стороне от своего родителя, что и его родитель по отношению к своему родителю.',252,0),
(917,'\0','Является левым потомком правого потомка.',252,0),
(918,'\0','Является правым потомком левого потомка.',252,0),
(919,'\0','Находится на противоположной стороне от своего родителя, чем его \"брат\" по отношению к их \"предкам\".',252,0),
(920,'','Да.',253,0),
(921,'\0','Нет.',253,0),
(922,'','Узел является внутренним внуком, а родитель окрашен в черный цвет.',254,0),
(923,'\0','Узел является внуком, а родитель окрашен в черный цвет.',254,0),
(924,'\0','Узел является внешним внуком, а родитель окрашен в красный цвет.',254,0),
(925,'\0','Узел является внешним внуком, а родитель окрашен в черный цвет.',254,0),
(926,'','Да.',255,0),
(927,'\0','Нет.',255,0),
(928,'\0','Трех потомков и четыре элемента данных.',256,0),
(929,'','Двух, трех или четырех потомков.',256,0),
(930,'\0','Двух родителей, трех потомков и четыре элемента.',256,0),
(931,'\0','Двух родителей, три элемента и четырех потомков.',256,0),
(932,'\0','Пустое.',257,0),
(933,'\0','Упорядоченно.',257,0),
(934,'','Сбалансировано.',257,0),
(935,'\0','Синхронизировано.',257,0),
(936,'\0','Да.',258,0),
(937,'','Нет.',258,0),
(938,'\0','Да.',259,0),
(939,'','Нет.',259,0),
(940,'\0','1.',260,0),
(941,'','2.',260,0),
(942,'\0','3.',260,0),
(943,'\0','4.',260,0),
(944,'\0','5.',260,0),
(945,'\0','Создается ровно один узел.',261,0),
(946,'','В дерево добавляется ровно один новый элемент данных.',261,0),
(947,'\0','Один элемент данных перемещается из разбиваемого узла в родительский.',261,0),
(948,'\0','Один элемент данных перемещается из разбиваемого узла в создаваемого \"брата\".',261,0),
(971,'\0','Разбиении потомка.',262,0),
(949,'\0','Разбиении внука.',262,0),
(950,'','Разбиении корневого узла.',262,0),
(951,'\0','Переключении цветов.',262,0),
(952,'','Разбиение узлов при перемещении вниз в случае необходимости.',263,0),
(953,'\0','Выбора потомка для перехода в зависимости от элементов данных узла.',263,0),
(954,'\0','Завершение поиска на листовом узле, если искомый ключ не найден.',263,0),
(955,'\0','Проверка минимум одного элемента в каждом посещаемом узле.',263,0),
(956,'\0','0,1.',264,0),
(957,'','2.',264,0),
(958,'\0','Повороту.',265,0),
(959,'\0','Разбиению корневого узла.',265,0),
(960,'','Переключению цветов.',265,0),
(961,'\0','Поиску левым потомком, правого.',265,0),
(962,'\0','Если родитель разбиваемого узла полон, то он тоже должен быть подвергнут разбиению.',266,0),
(963,'','Наименьший элемент разбиваемого узла всегда остается в этом узле.',266,0),
(964,'\0','При разбиении родителя потомок 2 всегда отсоединяется от старого родителя и присоединяется к новому родителю.',266,0),
(965,'\0','Процесс разбиения начинается с листового узла и продвигается вверх.',266,0),
(966,'\0','O(n*log n).',267,0),
(967,'','O(log n).',267,0),
(968,'\0','O(log log n).',267,0),
(969,'\0','O(1).',267,0),
(970,'\0','O(n log n).',267,0),
(972,'\0','Вставка выполняется медленно, но позиция для записи данных находится быстро.',268,0),
(973,'\0','Перемещение данных с целью освобождения места под новые данные выполняется быстро благодаря возможности одновременного обращения \nко многим записям.',268,0),
(974,'\0','Удаление данных выполняется особенно быстро.',269,0),
(975,'','Поиск места для записи данных выполняется относительно медленно, но существует возможность записи большого объема данных.',268,0),
(976,'\0','Один.',269,0),
(977,'\0','Ниодного.',269,0),
(978,'\0','Выбирается программистом.',269,0),
(979,'','Много.',269,0),
(980,'','Да.',270,0),
(981,'\0','Нет.',270,0),
(982,'','Ключи с соответствующими номерами блоков.',271,0),
(983,'\0','Записи с соответствующими номерами блоков.',271,0),
(984,'\0','Ключи с соответствующими записями.',271,0),
(985,'\0','Фамилии с соответствующими ключами.',271,0),
(986,'\0','O(n*log n).',272,0),
(987,'\0','O(log n).',272,0),
(988,'\0','O(log log n).',272,0),
(989,'','O(1).',272,0),
(990,'\0','O(n).',272,0),
(991,'\0','Хеш-таблица.',273,0),
(992,'','Хеш-функция.',273,0),
(993,'\0','Контрольная сумма.',273,0),
(994,'\0','Кольцевой хэш.',273,0),
(995,'\0','Наличие в массиве многих свободных ячеек.',274,0),
(996,'\0','Свобода выбора адреса.',274,0),
(997,'\0','Проверка ячеек х + 1, х + 2, и т. д.., Пока не будет найдена пустая ячейка.',274,0),
(998,'','Поиск другой ячейки в массиве в том случае, если исходная ячейка занята.',274,0),
(999,'\0','Квадротичным пробированием.',275,0),
(1000,'\0','Двойным хешированием.',275,0),
(1001,'','Линейным пробированием.',275,0),
(1002,'\0','Методом цепочек.',275,0),
(1003,'\0','1, 2, 4, 8, 16.',276,0),
(1004,'','1, 4, 9, 16, 25.',276,0),
(1005,'\0','1, 8, 9, 32, 48.',276,0),
(1006,'\0','1, 3, 6, 12, 24.',276,0),
(1007,'\0','Несколько ключей хешируются в одну позицию.',277,0),
(1008,'','Последовательность применяемых смещений всегда одинакова.',277,0),
(1009,'\0','В хеш-таблицу вставляется слишком много элементов с одинаковым ключом.',277,0),
(1010,'\0','Хеш-функция не идеальна.',277,0),
(1011,'\0','Списока, на основе массива.',278,0),
(1012,'','Связного списка.',278,0),
(1013,'\0','Очереди.',278,0),
(1014,'\0','Приоритетной очереди.',278,0),
(1015,'\0','0.1 ',279,0),
(1016,'\0','0.5 ',279,0),
(1017,'','1.0 ',279,0),
(1018,'\0','2.0 ',279,0),
(1019,'\0','Нет верных вариантов.',279,0),
(1020,'','Да.',280,0),
(1021,'\0','Нет.',280,0),
(1022,'\0','Квадротичное пробирование.',281,0),
(1023,'\0','Двойное хеширование.',281,0),
(1024,'\0','Линейное пробирование.',281,0),
(1025,'','Метод цепочек.',281,0),
(1026,'\0','Левому подмассиву.',282,0),
(1027,'\0','Правому подмассиву.',282,0),
(1028,'','Размеру массива.',282,0),
(1029,'\0','Корневому узлу.',282,0),
(1030,'\0','Нет.',283,0),
(1031,'','Да.',283,0),
(1032,'','Возростает линейно с коэффициентом заполнения.',284,0),
(1033,'\0','Пропорционально количеству элементов в таблице.',284,0),
(1034,'\0','Пропорционально количеству списков.',284,0),
(1035,'\0','Пропорционально доле заполнения ячеек в массиве.',284,0),
(1036,'\0','Да.',285,0),
(1037,'','Нет.',285,0),
(1128,'\0','В левом подмассиве.',286,0),
(1129,'\0','В правом подмассиве.',286,0),
(1130,'\0','В одном пакете.',286,0),
(1131,'','В одном блоке.',286,0),
(1038,'\0','Cлужат исключительно для реализации полиморфизма.',287,0),
(1039,'','Позволяют наследникам переопределять методы родителя.',287,0),
(1040,'\0','не реализуются в базовом классе.',287,0),
(1041,'','Используются при реализации полиморфизма.',287,0),
(1042,'\0','...вами и вашими друзьями.',288,0),
(1043,'\0','...вами и вашими руками.',288,0),
(1044,'\0','...вашей комнатой и комнатой ваших соседей.',288,0),
(1045,'','...вашей комнатой и мебелью в ней.',288,0),
(1046,'\0','Наследование.',289,0),
(1047,'\0','Композиция.',289,0),
(1048,'\0','Инкапсуляция.',289,0),
(1049,'','Множественное наследование.',289,0),
(1050,'\0','Полиморфизм.',289,0),
(1051,'\0','Идентичность означает, что у объектов есть общий не абстрактный предок, а равенство - любой общий предок.',290,0),
(1052,'\0','Идентичность означает, что у объектов одинаковые поля, а равенство - что они содержат одинаковые данные.',290,0),
(1053,'\0','Идентичность означает, что объекты являются экземплярами одного и того же класса, а равенство - что они содержат одинаковые данные.',290,0),
(1054,'','Идентичность означает, что две ссылки указывают на один и тот же объект, а равенство - что они содержат одинаковые данные.',290,0),
(1055,'\0','В производных классах присутствует часть состояния родительского класса.',291,0),
(1056,'','Производные классы содержат поля и методы родительского.',291,0),
(1057,'\0','Производные классы содержат методы родительского класса.',291,0),
(1058,'\0','Производные классы наследуют поля родительского класса.',291,0),
(1059,'\0','Производные классы наследуют модификаторы доступа членов родительского класса.',291,0),
(1060,'\0','Это механизм, который объединяет данные и методы, манипулирующие этими данными, и защищает и то и другое от внешнего вмешательства или неправильного использования.',292,0),
(1061,'\0','Это механизм, позволяющий создавать классы объектов на основе других классов, расширяя и частично изменяя их функциональность и набор атрибутов.',292,0),
(1062,'','Это принцип, согласно которому объекты, имеющие одинаковый интерфейс, могут вести себя по-разному.',292,0),
(1063,'\0','Это процесс сокрытия компонентов данных и кода, реализующего функциональность, за интерфейсом, не позволяющим пользователю искажать данные.',292,0),
(1064,'\0','Это принцип ООП, согласно которому каждый объект может использоваться более чем в одной программе.',292,0),
(1065,'\0','Невозможность повторного использования кода.',293,0),
(1066,'','Поддержка языком ООП требует дополнительных ресурсов.',293,0),
(1067,'\0','Недостаточная гибкость в создании иерархии.',293,0),
(1068,'','Избыточность.',293,0),
(1069,'\0','Невозможность абстракции.',293,0),
(1070,'','Конструкторы не могут быть виртуальными.',294,0),
(1071,'\0','При использовании модификатора доступа static, конструкторы могут быть виртуальными.',294,0),
(1072,'\0','При использовании модификатора доступа protected, конструкторы могут быть виртуальными.',294,0),
(1073,'\0','Конструкторы могут быть виртуальными только в исключительных ситуациях.',294,0),
(1074,'\0','Персистентность делает систему более защищенной от внешних атак.',295,0),
(1075,'\0','Персистентность делает исходный код системы простым в понимании и обеспечивает повторное использование кода.',295,0),
(1076,'\0','Персистентность позволяет системе быстрее стартовать.',295,0),
(1077,'','Персистентность позволяет хранить и восстанавливать состояние объектов между выключениями системы.',295,0),
(1078,'\0','Персистентность увеличивает скорость поиска объектов по атрибутам.',295,0),
(1079,'\0','Класс содержит методы и поля, интерфейс - только методы.',296,0),
(1080,'\0','Класс определяет сущность, интерфейс определяет поведение.',296,0),
(1081,'','Класс определяет реализацию(возможно, частичную),
 интерфейс - только набор сигнатур.',296,0),
(1082,'\0','Класс содержит конструкторы и методы, интерфейс - только методы.',296,0),
(1083,'\0','Полиморфизм.',297,0),
(1084,'','Инкапсуляция.',297,0),
(1085,'\0','Абстракция.',297,0),
(1086,'\0','Наследование.',297,0),
(1087,'\0','Это процесс сокрытия компонентов данных и кода, реализующего функциональность, за интерфейсом, не позволяющим пользователю искажать данные.',298,0),
(1088,'\0','Это механизм, который объединяет данные и методы, манипулирующие этими данными, и защищает и то и другое от внешнего вмешательства или неправильного использования.',298,0),
(1089,'\0','Это принцип ООП, согласно которому каждый объект может использоваться более чем в одной программе.',298,0),
(1090,'','Это механизм, позволяющий создавать классы объектов на основе других классов, расширяя и частично изменяя их функциональность и набор атрибутов.',298,0),
(1091,'\0','Это механизм, который позволяет описывать новые классы на основании других классов.',298,0),
(1092,'\0','Да.',299,0),
(1093,'','Нет.',299,0),
(1094,'\0','Internal object.',300,0),
(1095,'\0','Abstract object.',300,0),
(1096,'','Immutable object.',300,0),
(1097,'\0','Sealed object.',300,0),
(1098,'\0','Все варианты.',300,0),
(1099,'\0','Среди вариантов нет правильного ответа.',300,0),
(1100,'\0','является синонимом отношения зависимости.',301,0),
(1101,'\0','не существует в ООП.',301,0),
(1102,'\0','является частным случаем ассоциации.',301,0),
(1103,'','является отношением типа наследования.',301,0),
(1104,'\0','Класс B - реализация класса A.',302,0),
(1105,'','Класс A - генерализация класса B.',302,0),
(1106,'\0','Класс A - реализация класса B.',302,0),
(1107,'\0','Класс B - генерализация класса A.',302,0),
(1108,'','Класс B - специализация класса A.',302,0),
(1109,'\0','Класс A - специализация класса B.',302,0),
(1110,'','Из-за неоднозначности выбора поведения, в случае если супер классы некоторого класса содержат методы с одинаковыми сигнатурами.',303,0),
(1111,'\0','Множественное наследование практически никогда не используется, в отличии от обычного наследования от одного класса.',303,0),
(1112,'\0','Множественное наследование невозможно реализовать с помощью таблицы виртуальных функций, поэтому требуются другие намного более сложные алгоритмы.',303,0),
(1113,'\0','Поддержка множественного наследования ведет к большим потерям производительности, так как для каждого класса необходимо держать сильно-ветвящуюся иерархию его предков.',303,0),
(1114,'\0','Статические методы.',304,0),
(1115,'\0','Динамическое выделение памяти.',304,0),
(1116,'\0','Виртуальные методы.',304,0),
(1117,'\0','Обработка исключений.',304,0),
(1118,'','Модификаторы доступа.',304,0),
(1119,'\0','WHERE last_name IS \'SM*\'',305,0),
(1120,'','WHERE last_name LIKE \'SM%\'',305,0),
(1121,'\0','WHERE last_name EQUATES TO \'SM\'',305,0),
(1122,'\0','WHERE last_name[1 TO 2] = \'SM\'',305,0),
(1123,'\0','WHERE last_name = \'SM\'',305,0),
(1124,'\0','Для успешного завершения транзакций.',306,0),
(1125,'','Для ускорения доступа к данным.',306,0),
(1126,'\0','Для отката изменений.',306,0),
(1127,'\0','Для объединения таблиц.',306,0),
(1132,'\0','Все необходимые данные вставлены в дерево.',307,0),
(1133,'','Все уровни заполнены узлами.',307,0),
(1134,'\0','Все существующие узлы содержат данные.',307,0),
(1135,'\0','Конфигурация узлов соответствует условиям пирамиды.',307,0),
(1136,'\0','Ключи правого потомка меньше ключа родителя.',308,0),
(1137,'\0','Ключи левого потомка больше ключа родителя.',308,0),
(1138,'','Ключи как правого так и левого потомка меньше либо равны ключу родителя.',308,0),
(1139,'\0','Ключи как правого так и левого потомка больше либо равны ключу родителя.',308,0),
(1140,'\0','Ключи как правого так и левого потомка меньше либо больше ключа родителя.',308,0),
(1141,'','Корня.',309,0),
(1142,'\0','Узла родителя.',309,0),
(1143,'\0','Подмассва.',309,0),
(1144,'\0','Потомка.',309,0),
(1145,'','Узел многократно меняется со своим родителем, пока не станет больше родителя.',310,0),
(1146,'\0','Узел многократно меняется со своим потомком, пока не станет больше потомка.',310,0),
(1147,'\0','Узел многократно меняется со своим потомком, пока не станет меньше потомка.',310,0),
(1148,'\0','Узел многократно меняется со своим родителем, пока не станет меньше родителя.',310,0),
(1149,'\0','Одна колонка, которая однозначно идентифицирует запись в таблице и может быть описана как автоинкремент.',311,0),
(1150,'\0','Колонка, в которую можно писать только уникальные значения.',311,0),
(1151,'\0','Первая колонка в таблице.',311,0),
(1152,'','Одна или несколько колонок, которые однозначно идентифицируют запись в таблице.',311,0),
(1153,'\0','Это синоним внешнего ключа (foreign key).',311,0),
(1154,'\0','INSERT INTO students (id, first_name, last_name) SELECT id, first_name FROM new_students WHERE last_name IS NULL.',312,0),
(1216,'\0','UPDATE table_name SET col1_name = \'col1val\' and SET col2_name = \'col2val\';',326,0),
(1156,'\0','INSERT INTO students (id, first_name, last_name).',312,0),
(1157,'\0','INSERT INTO students (id, first_name, last_name) (118, \'Ellen\', \'Moran\').',312,0),
(1158,'','INSERT INTO students (id, first_name, last_name) VALUES (100, \'Kim\', \'Matheson\').',312,0),
(1159,'\0','INSERT INTO',313,0),
(1160,'\0','SELECT',313,0),
(1161,'\0','ALTER',313,0),
(1162,'\0','UPDATE',313,0),
(1163,'','DROP',313,0),
(1164,'','SELECT NAME, COMMENT FROM EMPLOYEES LEFT JOIN TASKS ON CURRENT_TASK_ID = TASK_ID',314,0),
(1165,'\0','SELECT NAME, COMMENT FROM EMPLOYEES RIGHT JOIN TASKS ON CURRENT_TASK_ID = TASK_ID',314,0),
(1166,'\0','SELECT NAME, COMMENT FROM EMPLOYEES, TASKS WHERE JOB_ID = TASK_ID',314,0),
(1167,'\0','SELECT NAME, COMMENT FROM EMPLOYEES, TASKS WHERE CURRENT_TASK_ID = TASK_ID',314,0),
(1168,'','ALL',315,0),
(1169,'\0','EVERY',315,0),
(1170,'\0','FULL',315,0),
(1171,'','ANY',315,0),
(1172,'\0','UNION',315,0),
(1173,'','SOME',315,0),
(1174,'\0','Для снижения нагрузки на сервер с потерей производительности выполнения запроса.',316,0),
(1175,'\0','Для ускорения выборки по конкретному полю.',316,0),
(1176,'','Для выборки только уникальных записей по каждому полю.',316,0),
(1177,'\0','Для выборки количества уникальных записей в таблице.',316,0),
(1178,'','Да.',317,0),
(1179,'\0','Нет.',317,0),
(1180,'','DELETE FROM WHERE',318,0),
(1181,'\0','DELETE WHERE',318,0),
(1182,'\0','DELETE FROM HAVING',318,0),
(1183,'\0','DELETE FROM ORDER BY',318,0),
(1184,'\0','NULL = NULL',319,0),
(1185,'\0','NULL != NULL',319,0),
(1186,'\0','NULL > NULL',319,0),
(1187,'','ничего из вышеперечисленного.',319,0),
(1188,'\0','Внешний ключ.',320,0),
(1189,'\0','Первичный ключ.',320,0),
(1190,'\0','Поле.',320,0),
(1191,'','Запись',320,0),
(1192,'\0','Запрос удалит из таблиц RATE все записи у которых поле id_del=1',321,0),
(1193,'\0','Запрос выполнится, но не удалит ни одной записи.',321,0),
(1194,'\0','Запрос удалит из таблиц RATE все записи.',321,0),
(1195,'\0','Запрос удалит из таблиц RATE все записи у которых поле id_del=0',321,0),
(1196,'','Запрос не выполнится.',321,0),
(1197,'\0','select * from category where id in (2..4)',322,0),
(1198,'','select * from category where id>=2 and id<=4',322,0),
(1199,'\0','select * from category where id >= 2 and <=4',322,0),
(1200,'\0','select * from category where id>2 and id<4',322,0),
(1201,'\0','select * from category where id like 2..4',322,0),
(1202,'','select * from category where id in (2,3,4)',322,0),
(1203,'','SELECT * FROM Discount WHERE Description = \'Joe\'\'s Special Blend\'',323,0),
(1204,'\0','SELECT * FROM Discount WHERE Description = \"Joe\'s Special Blend\"',323,0),
(1205,'\0','SELECT * FROM Discount WHERE Description = \"Joe\'\'s Special Blend\"',323,0),
(1206,'\0','SELECT * FROM Discount WHERE Description = \'Joe\'s Special Blend\'',323,0),
(1207,'\0','SELECT * FROM Discount WHERE Description = Joe\'s Special Blend',323,0),
(1208,'','SQL расшифровывается как язык структурированных запросов (Structured Query Language).',324,0),
(1209,'','SQL позволяет обновлять записи в базе данных.',324,0),
(1210,'','SQL - это язык, являющийся стандартом ANSI.',324,0),
(1211,'','SQL позволяет выполнять запросы к базе данных.',324,0),
(1212,'','ORDER BY',325,0),
(1213,'\0','HAVING',325,0),
(1214,'\0','LIMIT',325,0),
(1215,'\0','GROUP BY',325,0),
(1217,'\0','Одним запросом можно обновить не более одной колонки.',326,0),
(1218,'\0','UPDATE table_name SET col1_name = \'col1val\' SET col2_name = \'col2val\';',326,0),
(1219,'','UPDATE table_name SET col1_name = \'col1val\', col2_name = \'col2val\';',326,0),
(1220,'','insert into publisher (name) values (\'OREILLY\');',327,0),
(1221,'','insert into publisher (name) values (\'O-Reilly\');',327,0),
(1222,'','insert into publisher (name) values (\'O Reilly\');',327,0),
(1223,'\0','insert into publisher (name) values (\'O\'Reilly\');',327,0),
(1224,'\0','Позволяет исключить из выборки значения, в которых встречается символ \'A\'',328,0),
(1225,'','Позволяет интерпретировать символ подчеркивания в строке как обычный символ, если он стоит после \'A\'',328,0),
(1226,'\0','Позволяет исключить из выборки значения, в которых третий и шестой символы \'A\'',328,0),
(1227,'\0','Позволяет интерпретировать символ подчеркивания в строке как обычный символ, если он стоит перед \'A\'',328,0),
(1228,'\0','В SQL такой опции нет.',328,0),
(1229,'\0','IS NULL',329,0),
(1230,'\0','AND',329,0),
(1231,'\0','Умножение (*),
 деление (/)',329,0),
(1232,'\0','NOT',329,0),
(1233,'','Знаки \'+\' и \'-\'',329,0),
(1234,'\0','Нет, существуют исключения - объекты классов InputStream, OutputStream.',330,0),
(1235,'','Нет, существуют исключения - объекты-потоки класса Thread.',330,0),
(1236,'\0','Нет, существуют исключения - объекты классов String.',330,0),
(1237,'\0','Да, может удалять объекты любых классов.',330,0),
(1238,'\0','ClassCastException.',331,0),
(1239,'\0','IndexOutOfBoundsException.',331,0),
(1240,'','OutOfMemoryError.',331,0),
(1241,'','NullPointerException.',331,0),
(1242,'\0','ArithmeticException.',331,0),
(1243,'\0','public',332,0),
(1244,'','private',332,0),
(1245,'\0','protected',332,0),
(1246,'\0','transient',332,0),
(1247,'\0','Без указания уровня доступа.',332,0),
(1248,'','Hashtable.',333,0),
(1249,'\0','HashMap.',333,0),
(1250,'\0','LinkedHashMap.',333,0),
(1251,'\0','HashSet.',333,0),
(1252,'\0','TreeMap.',333,0),
(1253,'','Полна.',334,0),
(1254,'\0','Облодает слабой упорядоченностью.',334,0),
(1255,'\0','Является двоичным деревом.',334,0),
(1256,'\0','Удовлетворяет условию пирамиды.',334,0),
(1257,'\0','Всегда является левым потомком.',335,0),
(1258,'\0','Всегда является правым потомком.',335,0),
(1259,'','Всегда находится на нижнем уровне.',335,0),
(1260,'\0','Никогда не бывает меньше своего брата.',335,0),
(1261,'','Массив.',336,0),
(1262,'\0','Подмассив.',336,0),
(1263,'','Связный список.',336,0),
(1264,'\0','Хеш-таблица.',336,0),
(1265,'\0','Вниз.',337,0),
(1266,'\0','Влево.',337,0),
(1267,'','Вверх.',337,0),
(1268,'\0','Вправо.',337,0),
(1269,'\0','Извлечении данных из пирамиды и их поворотной вставке.',338,0),
(1270,'','Вставке данных в пирамиду и их последующем извлечении.',338,0),
(1271,'\0','Копировании данных из одной пирамиды в другую.',338,0),
(1272,'\0','Копировании данных в пирамиду из массива, представляющего пирамиду.',338,0),
(1273,'\0','Один левый подмассив.',339,0),
(1274,'\0','Один правый подмассив.',339,0),
(1275,'','Один.',339,0),
(1276,'\0','Два.',339,0),
(1277,'\0','дерево.',340,0),
(1278,'','ребро.',340,0),
(1279,'\0','плоскости.',340,0),
(1280,'','вершины.',340,0),
(1281,'\0','Подсчитать количество ребер и разделить на 3(предполагаться что вертикаль матрицы заполнена нулями).',341,0),
(1282,'','Подсчитать количество единиц и разделить на 2(предполагаться что диагональ матрицы заполнена нулями).',341,0),
(1283,'\0','Подсчитать количество единиц и разделить на 4(предполагаться что горизонталь матрицы заполнена нулями).',341,0),
(1284,'\0','Подсчитать количество деревьев и разделить на 5(предполагаться что диагональ матрицы заполнена нулями).',341,0),
(1285,'\0','Ребра образуют минимальное остовное дерево.',342,0),
(1286,'\0','Из вершины А возможен переход только в вершину В, затем в вершину С и т.д...',342,0),
(1287,'\0','От одной вершины к другой можно перейти только в одном направлении.',342,0),
(1288,'','По любому заданному пути можно перемещаться только в одном направлении.',342,0),
(1289,'\0','Массив.',343,0),
(1290,'','Узел.',343,0),
(1291,'\0','Ребро.',343,0),
(1292,'\0','Вершина.',343,0),
(1293,'\0','A:B, D:B ->D ->C, C:B, B:A',344,0),
(1294,'\0','D:B, A:B ->C ->D , C:B, B:A',344,0),
(1295,'',' A:B, B:A ->C ->D , C:B, D:B',344,0),
(1296,'\0',' A:B, B:A ->D ->C , C:B, D:B',344,0),
(1297,'','Количество ребер, соединяющих все вершины, минимально.',345,0),
(1298,'\0','Количество ребер равно количеству вершин.',345,0),
(1299,'\0','Все избыточные вершины были удалены.',345,0),
(1300,'\0','Каждая пара вершин соединяется минимальным количеством ребер.',345,0),
(1301,'\0','2.',346,0),
(1302,'\0','6.',346,0),
(1303,'\0','3.',346,0),
(1304,'\0','12.',346,0),
(1305,'\0','К любой вершине можно перейти от другой вершины.',347,0),
(1306,'\0','Количество путей больше количества вершин.',347,0),
(1307,'','Количество ребер равно количеству вершин.',347,0),
(1308,'\0','Количество путей меньше количества ребер.',347,0),
(1309,'\0','Потомком.',348,0),
(1310,'','Деревом.',348,0),
(1311,'\0','Ребром.',348,0),
(1312,'\0','Вершиной.',348,0),
(1313,'','Нет.',349,0),
(1314,'\0','Да.',349,0),
(1315,'\0','Нет.',350,0),
(1316,'','Да.',350,0),
(1317,'\0','Упорядочение вершин, при котором все направленные ребра идут в одном направлении.',351,0),
(1318,'\0','Упорядочение вершин в порядке возрастания количества ребер.',351,0),
(1319,'\0','Упорядочение вершин, при котором А предшествует В, В предшествует С и т.д...',351,0),
(1320,'','Упорядочение вершин, при котором вершины, от которых идут ребра к другим вершинам, предшествуют им в списке.',351,0),
(1321,'\0','Да.',352,0),
(1322,'','Нет.',352,0),
(1323,'\0','Вершин.',353,0),
(1324,'','Ребер.',353,0),
(1325,'\0','Деревьев.',353,0),
(1326,'\0','Массивов.',353,0),
(1327,'\0','Количество ребер от начальной до заданной вершины.',354,0),
(1328,'\0','Количество ребер соединяющих все вершины.',354,0),
(1329,'\0','Сумарный вес ребер от начальной до заданной вершины.',354,0),
(1330,'','Сумарный вес ребер, соединяющих все вершины.',354,0),
(1331,'\0','Да.',355,0),
(1332,'','Нет.',355,0),
(1333,'','Ребро с наименьшим весом.',356,0),
(1334,'\0','Ребро с наибольшим весом.',356,0),
(1335,'\0','Вершина с наименьшим весом.',356,0),
(1336,'\0','Вершина с наибольшим весом.',356,0),
(1337,'\0','Уже является конечной для ребра с большим весом.',357,0),
(1338,'','Уже является конечной для ребра с меньшим весом.',357,0),
(1339,'\0','Уже является конечной для вершины с меньшим весом.',357,0),
(1340,'\0','Уже является конечной для вершины с большим весом.',357,0),
(1341,'','От одной заданной вершины до всех остальных вершин.',358,0),
(1342,'\0','От одной заданной вершины до другой заданной вершины.',358,0),
(1343,'\0','От всех вершин до всех остальных вершин, до которых можно добраться через одно ребро.',358,0),
(1344,'\0','От всех вершин до всех остальных вершин, до которых можно добраться через несколько ребер.',358,0),
(1345,'','Да.',359,0),
(1346,'\0','Нет.',359,0),
(1347,'\0','Алгоритм Джонсона.',360,0),
(1348,'\0','Алгоритм Краскала.',360,0),
(1349,'\0','Алгоритм Кристофидеса.',360,0),
(1350,'','Алгоритм Уоршелла.',360,0),
(1351,'\0','Алгоритма на графах.',361,0),
(1352,'','Матрицы смежности.',361,0),
(1353,'\0','Характеристических паттернов.',361,0),
(1354,'\0','Триангуляции.',361,0),
(1355,'\0','2n.',362,0),
(1356,'\0','2n+1.',362,0),
(1357,'','2n-1.',362,0),
(1358,'\0','(0n)-1.',362,0),
(1359,'\0','Да.',363,0),
(1360,'','Нет.',363,0),
(1369,'\0','Composite.',364,0),
(1370,'','Chain of Responsibility.',364,0),
(1371,'\0','Visitor.',364,0),
(1372,'\0','Iterator.',364,0),
(1373,'\0','Нет такого паттерна, который тут можно применить.',364,0),
(1374,'\0','Visitor.',365,0),
(1375,'\0','Observer.',365,0),
(1376,'','Iterator.',365,0),
(1377,'\0','Walker.',365,0),
(1378,'\0','Collector.',365,0),
(1379,'\0','Stream.',366,0),
(1380,'','Decorator.',366,0),
(1381,'\0','Adapter.',366,0),
(1382,'\0','Buffer.',366,0),
(1383,'\0','Wrapper.',366,0),
(1384,'','Singleton.',367,0),
(1385,'\0','Decorator.',367,0),
(1386,'\0','Factory Method.',367,0),
(1387,'\0','Abstract Factory.',367,0),
(1388,'\0','Proxy.',367,0),
(1389,'\0','Iterator.',368,0),
(1390,'','Factory Method.',368,0),
(1391,'\0','Аbstract Method.',368,0),
(1392,'\0','Template Method.',368,0),
(1393,'\0','Singleton.',368,0),
(1394,'','...позволяет объекту клиента создавать сложный объект, задавая для него только тип и содержимое.',369,0),
(1395,'\0','...предоставляет способ создания объектов из соответствующего набора конкретных классов.',369,0),
(1396,'\0','...позволяет создавать специальные объекты ничего точно не зная об их классе или деталях создания.',369,0),
(1397,'\0','...не является ничем из перечисленного.',369,0),
(1398,'','Отсутствие интерфейса субъекта, что не позволяет создать собственную реализацию, которая бы сочеталась со встроенным API.',370,0),
(1399,'\0','Порядок нотификации не определен.',370,0),
(1400,'','Невозможность использования субъекта при помощи композиции.',370,0),
(1401,'','Невозможность использования Observable для класса, находящегося в середине иерархии, обусловленной бизнес-логикой.',370,0),
(1402,'','Могут использоваться там, где их применение не оправдано и не требуется.',371,0),
(1403,'','Могут затруднять понимание бизнес-логики приложения.',371,0),
(1404,'\0','Всегда усложняют программную архитектуру приложения.',371,0),
(1405,'\0','Не предлагают конкретных алгоритмов решения задач в определенной предметной области.',371,0),
(1406,'\0','Decorator.',372,0),
(1407,'','Adapter.',372,0),
(1408,'\0','Abstract factory.',372,0),
(1409,'\0','Facade.',372,0),
(1410,'\0','Builder.',372,0),
(1411,'\0','Да.',373,0),
(1412,'','Нет.',373,0),
(1413,'','Да.',374,0),
(1414,'\0','Нет.',374,0),
(1415,'\0','Паттерн Facade имеет другую функцию.',374,0),
(1416,'\0','Abstract Factory.',375,0),
(1417,'','Builder.',375,0),
(1418,'\0','Facade.',375,0),
(1419,'\0','Adapter.',375,0),
(1420,'','Декоратор.',376,0),
(1421,'\0','Адаптер.',376,0),
(1422,'\0','Маркер-интерфейс.',376,0),
(1423,'\0','Неизменный объект.',376,0),
(1424,'\0','Decorator.',377,0),
(1425,'\0','Facade.',377,0),
(1426,'\0','Adapter.',377,0),
(1427,'','Iterator.',377,0),
(1428,'\0','Decorator.',378,0),
(1429,'\0','Abstract Factory.',378,0),
(1430,'\0','Factory Method.',378,0),
(1431,'','Singleton.',378,0),
(1432,'\0','Singleton.',378,0),
(1433,'\0','Memento.',378,0),
(1434,'','Да.',379,0),
(1435,'\0','Нет.',379,0),
(1436,'\0','Builder.',380,0),
(1437,'\0','Factory Method.',380,0),
(1438,'\0','Abstract Factory.',380,0),
(1439,'\0','Proxy.',380,0),
(1440,'','Prototype.',380,0),
(1441,'\0','Flyweight.',381,0),
(1442,'\0','Abstract Factory.',381,0),
(1443,'','Decorator.',381,0),
(1444,'\0','Mediator.',381,0),
(1445,'\0','Composite.',381,0);
/*!40000 ALTER TABLE `Ansver` ENABLE KEYS */;
UNLOCK TABLES;

--
-- Table structure for table `Question`
--

DROP TABLE IF EXISTS `Question`;
/*!40101 SET @saved_cs_client     = @@character_set_client */;
/*!40101 SET character_set_client = utf8 */;
CREATE TABLE `Question` (
  `id` bigint(20) NOT NULL AUTO_INCREMENT,
  `taskName` varchar(255) DEFAULT NULL,
  `razdel_id` bigint(20) DEFAULT NULL,
  PRIMARY KEY (`id`),

  KEY `FKBE5CA00628A4062F` (`razdel_id`)
) ENGINE=MyISAM AUTO_INCREMENT=8 DEFAULT CHARSET=utf8;
/*!40101 SET character_set_client = @saved_cs_client */;

--
-- Dumping data for table `Question`
--

LOCK TABLES `Question` WRITE;
/*!40000 ALTER TABLE `Question` DISABLE KEYS */;
INSERT INTO `Question` VALUES (1,'Вопрос',NULL),
(2,'Вопрос',NULL),
(3,'Вопрос',NULL),
(4,'Вопрос',NULL),
(5,'Вопрос',NULL),
(6,'Вопрос',NULL),
(7,'Вопрос',NULL);
/*!40000 ALTER TABLE `Question` ENABLE KEYS */;
UNLOCK TABLES;

--
-- Table structure for table `Razdel`
--

DROP TABLE IF EXISTS `Razdel`;
/*!40101 SET @saved_cs_client     = @@character_set_client */;
/*!40101 SET character_set_client = utf8 */;
CREATE TABLE `Razdel` (
  `id` bigint(20) NOT NULL AUTO_INCREMENT,
  `name` varchar(255) DEFAULT NULL,
  `text` varchar(255) DEFAULT NULL,
  PRIMARY KEY (`id`)
) ENGINE=MyISAM AUTO_INCREMENT=12 DEFAULT CHARSET=utf8;
/*!40101 SET character_set_client = @saved_cs_client */;

--
-- Dumping data for table `Razdel`
--

LOCK TABLES `Razdel` WRITE;
/*!40000 ALTER TABLE `Razdel` DISABLE KEYS */;
INSERT INTO `Razdel` VALUES 
(1,'ООП',''),
(2,'Java core',''),
(3,'Коллекции и структуры данных',''),
(4,'Multithreading',''),
(5,'Maven',''),
(6,'JDBC',''),
(7,'ORM (Hibernate)',''),
(8,'Базы данных',''),
(9,'SQL',''),
(10,'Алгоритмы',''),
(11,'Основы','');
/*!40000 ALTER TABLE `Razdel` ENABLE KEYS */;
UNLOCK TABLES;

--
-- Table structure for table `Razdel_Question`
--

DROP TABLE IF EXISTS `Razdel_Question`;
/*!40101 SET @saved_cs_client     = @@character_set_client */;
/*!40101 SET character_set_client = utf8 */;
CREATE TABLE `Razdel_Question` (
  `Razdel_id` bigint(20) NOT NULL,
  `tasks_id` bigint(20) NOT NULL,
  `questions_id` bigint(20) NOT NULL,
  UNIQUE KEY `tasks_id` (`tasks_id`),
  KEY `FK9A1F314557AC2A87` (`tasks_id`),
  KEY `FK9A1F314528A4062F` (`Razdel_id`),
  KEY `FK9A1F314565DC1868` (`questions_id`)
) ENGINE=MyISAM DEFAULT CHARSET=utf8;
/*!40101 SET character_set_client = @saved_cs_client */;

--
-- Dumping data for table `Razdel_Question`
--

LOCK TABLES `Razdel_Question` WRITE;
/*!40000 ALTER TABLE `Razdel_Question` DISABLE KEYS */;
INSERT INTO `Razdel_Question` VALUES (2,6,0),
(2,2,0),
(3,3,0),
(1,4,0),
(2,1,0),
(2,5,0),
(2,7,0);
/*!40000 ALTER TABLE `Razdel_Question` ENABLE KEYS */;
UNLOCK TABLES;

--
-- Table structure for table `Razdel_Task`
--

DROP TABLE IF EXISTS `Razdel_Task`;
/*!40101 SET @saved_cs_client     = @@character_set_client */;
/*!40101 SET character_set_client = utf8 */;
CREATE TABLE `Razdel_Task` (
  `Razdel_id` bigint(20) NOT NULL,
  `tasks_id` bigint(20) NOT NULL,
  UNIQUE KEY `tasks_id` (`tasks_id`),
  KEY `FK1A2AB26471337E55` (`tasks_id`),
  KEY `FK1A2AB264C8904E1E` (`Razdel_id`),
  KEY `FK1A2AB264444806A6` (`tasks_id`),
  KEY `FK1A2AB26428A4062F` (`Razdel_id`),
  KEY `FK1A2AB26466C2B616` (`Razdel_id`),
  KEY `FK1A2AB264E64F844D` (`tasks_id`),
  KEY `FK1A2AB2645C8E1CD1` (`Razdel_id`),
  KEY `FK1A2AB264C3AB5DC8` (`tasks_id`),
  KEY `FK1A2AB264D623C1B` (`Razdel_id`),
  KEY `FK1A2AB26498B2C792` (`tasks_id`)
) ENGINE=MyISAM DEFAULT CHARSET=utf8;
/*!40101 SET character_set_client = @saved_cs_client */;

--
-- Dumping data for table `Razdel_Task`
--

LOCK TABLES `Razdel_Task` WRITE;
/*!40000 ALTER TABLE `Razdel_Task` DISABLE KEYS */;
INSERT INTO `Razdel_Task` VALUES (1,7),
(1,8),
(1,9),
(1,10),
(1,11),
(1,12),
(1,13),
(1,14),
(1,15),
(1,16),
(1,17),
(1,18),
(1,19),
(1,20),
(1,21),
(1,22),
(1,23),
(1,24),
(1,25),
(1,26),
(1,27),
(1,28),
(1,29),
(1,30),
(1,31),
(1,32),
(1,139),
(1,140),
(1,141),
(1,215),
(1,216),
(1,217),
(1,218),
(1,219),
(1,220),
(1,221),
(1,222),
(1,223),
(1,224),
(1,225),
(1,226),
(1,227),
(1,228),
(1,229),
(1,230),
(1,231),
(1,232),
(1,233),
(1,287),
(1,288),
(1,289),
(1,290),
(1,291),
(1,292),
(1,293),
(1,294),
(1,295),
(1,296),
(1,297),
(1,298),
(1,299),
(1,300),
(1,301),
(1,302),
(1,303),
(1,304),
(2,33),
(2,34),
(2,35),
(2,36),
(2,37),
(2,38),
(2,39),
(2,40),
(2,41),
(2,42),
(2,43),
(2,44),
(2,45),
(2,46),
(2,47),
(2,48),
(2,49),
(2,50),
(2,51),
(2,52),
(2,53),
(2,54),
(2,55),
(2,56),
(2,57),
(2,58),
(2,59),
(2,61),
(2,63),
(2,64),
(2,67),
(2,68),
(2,69),
(2,70),
(2,71),
(2,72),
(2,198),
(2,259),
(2,268),
(2,331),
(2,332),
(2,333),
(2,364),
(2,365),
(2,366),
(2,367),
(2,368),
(2,369),
(2,370),
(2,371),
(2,372),
(2,373),
(2,374),
(2,375),
(2,376),
(2,377),
(2,378),
(2,379),
(2,380),
(2,381),
(3,60),
(3,62),
(3,65),
(3,66),
(3,73),
(3,74),
(3,75),
(3,76),
(3,77),
(3,78),
(3,79),
(3,80),
(3,81),
(3,82),
(3,83),
(3,84),
(3,85),
(3,86),
(3,162),
(3,163),
(3,164),
(3,165),
(3,166),
(3,167),
(3,168),
(3,169),
(3,170),
(3,171),
(3,172),
(3,173),
(3,174),
(3,175),
(3,176),
(3,177),
(3,178),
(3,179),
(3,180),
(3,181),
(3,182),
(3,196),
(3,197),
(3,199),
(3,200),
(3,201),
(3,202),
(3,203),
(3,204),
(3,205),
(3,206),
(3,207),
(3,208),
(3,209),
(3,210),
(3,211),
(3,212),
(3,213),
(3,214),
(3,248),
(3,249),
(3,250),
(3,251),
(3,252),
(3,253),
(3,254),
(3,255),
(3,256),
(3,257),
(3,258),
(3,260),
(3,261),
(3,262),
(3,263),
(3,264),
(3,265),
(3,266),
(3,267),
(3,269),
(3,270),
(3,271),
(3,272),
(3,273),
(3,274),
(3,275),
(3,276),
(3,277),
(3,278),
(3,279),
(3,280),
(3,281),
(3,282),
(3,283),
(3,284),
(3,285),
(3,286),
(3,307),
(3,308),
(3,309),
(3,310),
(3,334),
(3,335),
(3,336),
(3,337),
(3,338),
(3,339),
(3,340),
(3,341),
(3,342),
(3,343),
(3,344),
(3,345),
(3,346),
(3,347),
(3,348),
(3,349),
(3,350),
(3,351),
(3,352),
(3,353),
(3,354),
(3,355),
(4,87),
(4,88),
(4,89),
(4,90),
(4,91),
(4,92),
(4,93),
(4,94),
(4,95),
(4,96),
(4,97),
(4,98),
(4,99),
(4,100),
(4,101),
(4,102),
(4,103),
(4,104),
(4,105),
(4,107),
(4,108),
(4,109),
(4,111),
(4,112),
(4,117),
(4,330),
(5,106),
(6,110),
(7,113),
(8,114),
(8,116),
(8,124),
(8,125),
(8,126),
(8,127),
(8,128),
(9,115),
(9,129),
(9,133),
(9,234),
(9,235),
(9,236),
(9,237),
(9,238),
(9,239),
(9,240),
(9,241),
(9,242),
(9,243),
(9,244),
(9,245),
(9,246),
(9,247),
(9,305),
(9,306),
(9,311),
(9,312),
(9,313),
(9,314),
(9,315),
(9,316),
(9,317),
(9,318),
(9,319),
(9,320),
(9,321),
(9,322),
(9,323),
(9,324),
(9,325),
(9,326),
(9,327),
(9,328),
(9,329),
(10,118),
(10,119),
(10,120),
(10,121),
(10,122),
(10,123),
(10,130),
(10,131),
(10,132),
(10,134),
(10,135),
(10,136),
(10,137),
(10,151),
(10,152),
(10,153),
(10,154),
(10,155),
(10,156),
(10,157),
(10,158),
(10,159),
(10,160),
(10,161),
(10,183),
(10,184),
(10,185),
(10,186),
(10,187),
(10,188),
(10,189),
(10,192),
(10,193),
(10,194),
(10,356),
(10,357),
(10,358),
(10,359),
(10,360),
(10,361),
(10,362),
(10,363),
(11,138),
(11,1),
(11,2),
(11,3),
(11,4),
(11,5),
(11,6),
(11,142),
(11,143),
(11,144),
(11,145),
(11,146),
(11,147),
(11,148),
(11,149),
(11,150),
(11,190),
(11,191),
(11,195);
/*!40000 ALTER TABLE `Razdel_Task` ENABLE KEYS */;
UNLOCK TABLES;

--
-- Table structure for table `Result`
--

DROP TABLE IF EXISTS `Result`;
/*!40101 SET @saved_cs_client     = @@character_set_client */;
/*!40101 SET character_set_client = utf8 */;
CREATE TABLE `Result` (
  `id` bigint(20) NOT NULL AUTO_INCREMENT,
  `results` int(11) DEFAULT NULL,
  `testDate` datetime DEFAULT NULL,
  `firstName` varchar(255) DEFAULT NULL,
  `lastName` varchar(255) DEFAULT NULL,
  PRIMARY KEY (`id`)
) ENGINE=MyISAM DEFAULT CHARSET=utf8;
/*!40101 SET character_set_client = @saved_cs_client */;

--
-- Dumping data for table `Result`
--

LOCK TABLES `Result` WRITE;
/*!40000 ALTER TABLE `Result` DISABLE KEYS */;
/*!40000 ALTER TABLE `Result` ENABLE KEYS */;
UNLOCK TABLES;

--
-- Table structure for table `Task`
--

DROP TABLE IF EXISTS `Task`;
/*!40101 SET @saved_cs_client     = @@character_set_client */;
/*!40101 SET character_set_client = utf8 */;
CREATE TABLE `Task` (
  `id` bigint(20) NOT NULL AUTO_INCREMENT,
  `taskName` varchar(1024) DEFAULT NULL,
  `razdel_id` bigint(20) DEFAULT NULL,
  `explanationsText` varchar(1024) DEFAULT NULL,
  PRIMARY KEY (`id`),
  UNIQUE KEY `id` (`id`),
  KEY `FK27A9A5C8904E1E` (`razdel_id`),
  KEY `FK27A9A528A4062F` (`razdel_id`),
  KEY `explanationsText` (`explanationsText`(333)),
  KEY `FK27A9A566C2B616` (`razdel_id`),
  KEY `FK27A9A55C8E1CD1` (`razdel_id`),
  KEY `FK27A9A5D623C1B` (`razdel_id`)
) ENGINE=MyISAM AUTO_INCREMENT=1004 DEFAULT CHARSET=utf8;
/*!40101 SET character_set_client = @saved_cs_client */;

--
-- Dumping data for table `Task`
--

LOCK TABLES `Task` WRITE;
/*!40000 ALTER TABLE `Task` DISABLE KEYS */;
INSERT INTO `Task` VALUES (1,'В переменной типа char могут храниться значения из следующего диапазона ?',11,'Не правильный ответ !!!  '),
(2,'Как выглядит число (записано в бинарном виде) 01010101 в десятичной системе исчисления ?',11,'Не правильный ответ !!! '),
(3,'Сколько памяти (в битах) занимает long ?',11,'Не правильный ответ !!! '),
(4,'Сколько чисел можно закодировать тремя битами (от 000 до 111)?',11,'Не правильный ответ !!! '),
(5,'Какое максимальное значение можно записать в переменную типа short ?',11,'Не правильный ответ !!! '),
(6,'Как выглядит число 547 в бинарной системе ?',11,'Не правильный ответ !!! '),
(7,'Что НЕ может быть частью класса ?',1,'Не правильный ответ !!! '),
(8,'Как расшифровывается ООП ?',1,'Не правильный ответ !!! '),
(9,'Какой командой компилируется программный код в байт-код ?',1,'Не правильный ответ !!! '),
(10,'Какой командой запускается байт-код на выполнение ?',1,'Не правильный ответ !!! '),
(11,'Как НЕ правильно импортировать класс из пакета(class C, package a.b) ?',1,'Не правильный ответ !!! '),
(12,'Назовите все основные принципы ООП.',1,'Не правильный ответ !!! '),
(13,'Правильно ли все поля класса делать public ?',1,'Не правильный ответ !!! '),
(14,'Равно ли true значение у выражения: ((( true || false) ?',1,'Не правильный ответ !!! '),
(15,'Что такое наследование ?',1,'Не правильный ответ !!! '),
(16,'Что такое полиморфизм ?',1,'Не правильный ответ !!! '),
(17,'Назовите все проявления полиморфизма в Java ?',1,'Не правильный ответ !!! '),
(18,'Что такое инкапсуляция ?',1,'Не правильный ответ !!! '),
(19,'Сколько раз выполнится тело цикла: for (int i = 4; i < 10; i *= 2){/* ... */} ?',1,'Не правильный ответ !!! '),
(20,'Какой результат выполнения данного кода:System.out.println(0.0/0.0 + 10); ?',1,'Не правильный ответ !!! '),
(21,'У каких операторов всегда вычисляются все операнды (выберите все подходящие варианты)?',1,'Не правильный ответ !!! '),
(22,'Сколько раз выполнится тело цикла: for (int i = 10; i >= 1; i -= 2){ /* ... */} ?',1,'Не правильный ответ !!! '),
(23,'Являются ли массивы в Java однородными ?',1,'Не правильный ответ !!! '),
(24,'Возможно ли написать тело данного цикла таким образом что бы цикл был НЕ вечным: while (true) { /* … */ } ?',1,'Не правильный ответ !!! '),
(25,'Есть ли у данного класса default конструктор: class A {public A(){}} ?',1,'Не правильный ответ !!! '),
(26,'Int a[] = {1, 2, 3, 4}; int i = a[2]; // какое значение будет в переменной i ?',1,'Не правильный ответ !!! '),
(27,'Можно ли в Java унаследовать более одного класса ?',1,'Не правильный ответ !!! '),
(28,'Какое ключевое слово используется для наследования ?',1,'Не правильный ответ !!! '),
(29,'Какая область видимости у методов в интерфейсах ?',1,'Не правильный ответ !!! '),
(30,'Можно ли реализовать более одного интерфейса в классе ?',1,'Не правильный ответ !!! '),
(31,'Должен ли класс реализовывать все методы интерфейса (если он implements этот интерфейс) ?',1,'Не правильный ответ !!! '),
(32,'Может ли abstract класс не иметь ни одного abstract метода ?',1,'Не правильный ответ !!! '),
(33,'Опишите модификаторы доступа в Java ?',2,'Не правильный ответ !!! '),
(34,'Какие 2 префикса являются JavaBean стандартом именования имен методов ?',2,'Не правильный ответ !!! '),
(35,'Что такое package level access ?',2,'Не правильный ответ !!! '),
(36,'Можно ли наследоваться от класса java.lang.String ?',2,'Не правильный ответ !!! '),
(37,'Чем абстрактный класс отличается от интерфейса ?',2,'Не правильный ответ !!! '),
(38,'В Java спецификация класса ?',2,'Не правильный ответ !!! '),
(39,'Может ли объект получить доступ к private-переменной класса ?',2,'Не правильный ответ !!! '),
(40,'Когда объекту требуется выполнить операцию,он использует ?',2,'Не правильный ответ !!! '),
(41,'Какие существуют типы вложенных классов ?',2,'Не правильный ответ !!! '),
(42,'Имеет ли inner class доступ к полям внешнего класса ?',2,'Не правильный ответ !!! '),
(43,'Каким ключевым словом обозначается inner class ?',2,'Не правильный ответ !!! '),
(44,'Моугт ли вложенные классы реализовывать интерфейсы ?',2,'Не правильный ответ !!! '),
(45,'Какие из следующих утверждений верны ?',2,'Не правильный ответ !!! '),
(46,'Метод называется переопределенным ?',2,'Не правильный ответ !!! '),
(47,'Можно ли менять модификатор доступа метода, если да то каким образом ?',2,'Не правильный ответ !!! '),
(48,'Можно ли менять возвращаемый тип, если да, то как ?',2,'Не правильный ответ !!! '),
(49,'Можно ли менять тип передаваемых параметров ?',2,'Не правильный ответ !!! '),
(50,'Что такое autoboxing ?',2,'Не правильный ответ !!! '),
(51,'Что такое Generics ?',2,'Не правильный ответ !!! '),
(52,'Каким образом передаются переменные в методы, по значению или по ссылке ?',2,'Не правильный ответ !!! '),
(53,'Наследуются ли статические методы ?',2,'Не правильный ответ !!! '),
(54,'Если класс А должен использовать класс В для каких-то целей,то ?',2,'Не правильный ответ !!! '),
(55,'Если класс А использует класс В для каких-то целей,то методы и поля класса В,с которыми может работать класс А образуют ?\n..... класса В',2,'Не правильный ответ !!! '),
(56,'Зачем нужна аннотация @Override когда вы переопределяете (или реализовываете) методы ?',2,'Не правильный ответ !!! '),
(57,'Как изменить стандартное поведение сериализации/десериализации ?',2,'Не правильный ответ !!! '),
(58,'Если equals() переопределен, есть ли какие-либо другие методы, которые следует переопределить ?',2,'Не правильный ответ !!! '),
(59,'Какие из следующих утверждений  ложны ? Ссылка на объект класса:',2,'Не правильный ответ !!! '),
(60,'За какое время(в О-синтаксисе) выполняются операции вставки и удаления в дереве ?',3,'Не правильный ответ !!! '),
(61,'Что такое конструктор по умолчанию ?',2,'Не правильный ответ !!! '),
(62,'Двоичное дерево называется деревом поиска, если ?',3,'Не правильный ответ !!! '),
(63,'Перечислите все валидные сигнатуры конструкторов некоторого класса Clazz ?',2,'Не правильный ответ !!! '),
(64,'Чем отличаются слова final, finally и finalize ?',2,'Не правильный ответ !!! '),
(65,'Не все деревья являются двоичными ?',3,'Не правильный ответ !!! '),
(66,'Имеется полное двоичное дерево с 20 узлами. Предполагается что корень находится на уровне 0. Сколько узлов находится на\nуровне 4 ?',3,'Не правильный ответ !!! '),
(67,'Быструю сортировку можно ускорить, прерывая разбиение, когда размер подмассива уменьшится до 5, и завершая его с другим \nалгоритмом сортировки ?',2,'Не правильный ответ !!! '),
(68,'Что такое Error ?',2,'Не правильный ответ !!! '),
(69,'Что такое Exeptione ?',2,'Не правильный ответ !!! '),
(70,'Какой командой бросается исключение ?',2,'Не правильный ответ !!! '),
(71,'Что нужно дописать к методу который бросает обрабатываемое исключение ?',2,'Не правильный ответ !!! '),
(72,'При быстрой сортировке в качестве опорного элемента может выбираться любой элемент массива ?',2,'Не правильный ответ !!! '),
(73,'Вставка/извлечение элементов в стеке выполняется за время O(N) ?',3,'Не правильный ответ !!! '),
(74,'Чем отличается ArrayList от LinkedList ?',3,'Не правильный ответ !!! '),
(75,'Чем отличается HashMap от Hashtable ?',3,'Не правильный ответ !!! '),
(76,'Чем отличается ArrayList от Vector ?',3,'Не правильный ответ !!! '),
(77,'Какое начальное количество корзин в HashMap ?',3,'Не правильный ответ !!! '),
(78,'Максимальное число значений hashCode() ?',3,'Не правильный ответ !!! '),
(79,'Где выделяется память для локальной переменной ?',3,'Не правильный ответ !!! '),
(80,'Какой интерфейс реализовывает LinkedList ?',3,'Не правильный ответ !!! '),
(81,'Как работают HashSet, LinkedHashSet, TreeSet ?',3,'Не правильный ответ !!! '),
(82,'Какие интерфейсы расширяют интерфейс Collection ?',3,'Не правильный ответ !!! '),
(83,'Каким образом можно синхронизировать методы HashMap, ArrayList ?',3,'Не правильный ответ !!! '),
(84,'Особенности интерфейса Set ?',3,'Не правильный ответ !!! '),
(85,'Каким образом можно отсортировать коллекцию ?',3,'Не правильный ответ !!! '),
(86,'Как правильно удалить элемент из ArrayList ?',3,'Не правильный ответ !!! '),
(87,'Каким образом можно создать поток ?',4,'Не правильный ответ !!! '),
(88,'Можно ли вызвать в разных потоках два synchronized метода одного и того же объекта ?',4,'Не правильный ответ !!! '),
(89,'Какие вы знаете способы прекратить выполнение потока ?',4,'Не правильный ответ !!! '),
(90,'Какие способы синхронизации в Java ?',4,'Не правильный ответ !!! '),
(91,'Как работают методы wait и notify/notifyAll ?',4,'Не правильный ответ !!! '),
(92,'Чем отличается работа метода wait с параметром и без параметра ?',4,'Не правильный ответ !!! '),
(93,'Как работает метод Thread.yield() ?',4,'Не правильный ответ !!! '),
(94,'Чем отличаются методы Thread.sleep() и Thread.wait() ?',4,'Не правильный ответ !!! '),
(95,'Как работает метод Thread.join() ?',4,'Не правильный ответ !!! '),
(96,'Какие из следующих методов выбрасывают исключение InterruptedException ?',4,'Не правильный ответ !!! '),
(97,'Что такое dead lock ?',4,'Не правильный ответ !!! '),
(98,'Что такое Live lock ?',4,'Не правильный ответ !!! '),
(99,'Как правильно завершить работу потока ?',4,'Не правильный ответ !!! '),
(100,'На каком объекте происходит синхронизация при вызове static synchronized метода ?',4,'Не правильный ответ !!! '),
(101,'Для чего используется ключевое слово volatile ?',4,'Не правильный ответ !!! '),
(102,'По какому времени работает планировщик потоков ?',4,'Не правильный ответ !!! '),
(103,'Можно ли изменить квант ?',4,'Не правильный ответ !!! '),
(104,'Можно ли повторно использовать поток ?',4,'Не правильный ответ !!! '),
(105,'Когда можно изменить приоритет потока ?',4,'Не правильный ответ !!! '),
(106,'Как можно производить обработку событий клавиатуры в JTextField ?',5,'Не правильный ответ !!! '),
(107,'В какие состояния поток попадает один раз ?',4,'Не правильный ответ !!! '),
(108,'Что такое Mutex - (Monitor) ?',4,'Не правильный ответ !!! '),
(109,'Для чего используется sinchtonized ?',4,'Не правильный ответ !!! '),
(110,'Чем отличается Statement от PreparedStatement ?',6,'Не правильный ответ !!! '),
(111,'Может ли поток внезапно проснутся если ему указали wait(1000); ?',4,'Не правильный ответ !!! '),
(112,'Какой приоритет потока ?',4,'Не правильный ответ !!! '),
(113,'Что такое lazy-initialization (в Hibernate) ?',7,'Не правильный ответ !!! '),
(114,'Что такое транзакция ?',8,'Не правильный ответ !!! '),
(115,'Чем отличается redirect от forward ?',9,'Не правильный ответ !!! '),
(116,'Что такое нормальные формы ?',8,'Не правильный ответ !!! '),
(117,'Поток с каким приоритетом будет выполнятся чаще других ?',4,'Не правильный ответ !!! '),
(118,'Всегда ли при пузырьковой сортировке элемент сравнивается с каждым другим элементом ?',10,'Не правильный ответ !!! '),
(119,'Основные операции простой сортировки ?',10,'Не правильный ответ !!! '),
(120,'Сортировка называется устойчивой ?',10,'Не правильный ответ !!! '),
(121,'В каком отношении компьютерные алгоритмы сортировки более ограничены по сравнению с сортировкой, выполняемой человеком ?',10,'Не правильный ответ !!! '),
(122,'Перестановка содержимого структуры данных называется ?',10,'Не правильный ответ !!! '),
(123,'Пузырьковая сортировка ?',10,'Не правильный ответ !!! '),
(124,'Что такое нормализация ?',8,'Не правильный ответ !!! '),
(125,'В базе данных поле представляет собой ?',8,'Не правильный ответ !!! '),
(126,'Что такое primary key (первичный ключ) ?',8,'Не правильный ответ !!! '),
(127,'Что такое foreign key (внешний ключ) ?',8,'Не правильный ответ !!! '),
(128,'Поле,используемое для поиска конкретной записи,называется ?',8,'Не правильный ответ !!! '),
(129,'Какие есть типы JOIN\'ов ?',9,'Не правильный ответ !!! '),
(130,'Логарифм 100 по основанию 2 равен 2 ?',10,'Не правильный ответ !!! '),
(131,'О-синтаксис описывает ?',10,'Не правильный ответ !!! '),
(132,'Запись О(1) означает,что процесс выполняется за .... время ?',10,'Не правильный ответ !!! '),
(133,'Для чего используется слово HAVING ?',9,'Не правильный ответ !!! '),
(134,'Инвариантом называется ?',10,'Не правильный ответ !!! '),
(135,'Логарифм представляет собой операцию,обратную .... ?',10,'Не правильный ответ !!! '),
(136,'Логарифм 1000 по основанию 10 равен ?',10,'Не правильный ответ !!! '),
(137,'Логарифм 64 по основанию 2 равен ? ',10,'Не правильный ответ !!! '),
(138,'К какому типу языков относится Java ?',11,'Не правильный ответ !!! '),
(139,'Класс ?',1,'Не правильный ответ !!! '),
(140,'В ООП объект ?',1,'Не правильный ответ !!! '),
(141,'В Java для обращения к методам объекта необходимо использовать оператор ?',1,'Не правильный ответ !!! '),
(142,'В Java boolean и byte являются ?',11,'Не правильный ответ !!! '),
(143,'Вставка элемента в неупорядоченный массив:',11,'Не правильный ответ !!! '),
(144,'При удалении элемента из неупорядоченного массива в большинстве случаев приходится сдвигать другие элементы для \nзаполнения освободившейся ячейки ?',11,'Не правильный ответ !!! '),
(145,'В неупорядоченном массиве возможность хранения дубликатов ?',11,'Не правильный ответ !!! '),
(146,'В неупорядоченном массиве проверка отсутствия элемента в массиве занимает меньше времени,чем его присутствие ?',11,'Не правильный ответ !!! '),
(147,'При создании массива в Java необходимо использовать ключевое слово ?',11,'Не правильный ответ !!! '),
(148,'В упорядоченных массивах по сравнению с неупорядоченными ?',11,'Не правильный ответ !!! '),
(149,'Максимальное количество элементов,которые необходимо проверить для завершения двоичного поиска в массиве из 200 \nэлементов ровно ?',11,'Не правильный ответ !!! '),
(150,'В массиве могут храниться ?',11,'Не правильный ответ !!! '),
(151,'Какие операции чередуются в алгоритме пузырьковой сортировки ?',10,'Не правильный ответ !!! '),
(152,'При N элементах алгоритм пузырьковой сортировки выполняет ровно N x N сравнений?',10,'Не правильный ответ !!! '),
(153,'В алгоритме сортировки методом выбора?',10,'Не правильный ответ !!! '),
(154,'Если при выполнении конкретной сортировки перестановка элементов занимает намного больше времени, чем сравнение, \nсортировка методом выбора работает примерно вдвое быстрее пузырьковой сортировки ?',10,'Не правильный ответ !!! '),
(155,'Копиропание выполняется быстрее перестановки в ?',10,'Не правильный ответ !!! '),
(156,'Какой инвариант действует при сортировке методом выбора ?',10,'Не правильный ответ !!! '),
(157,'Что означает термин в сортировке методом вставки <<частичная сортировка>> ?',10,'Не правильный ответ !!! '),
(158,'Сдвиг группы элементов влево или вправо требует многократного выполнения ?',10,'Не правильный ответ !!! '),
(159,'В сортировке методом вставки, элемент вставленный в частично отсортированную группу ?',10,'Не правильный ответ !!! '),
(160,'Инвариант сортировки методом вставки ?',10,'Не правильный ответ !!! '),
(161,'Свойство устойчивости алгоритма сортировки означает что ?',10,'Не правильный ответ !!! '),
(162,'Какое из следующих выражений истинно ?',3,'Не правильный ответ !!! '),
(163,'Стек или очередь часто используются в качестве базового механизма для реализации массивов ?',3,'Не правильный ответ !!! '),
(164,'Допустим, элементы массива пронумерованы слева на право, начиная с индекса 0. На базе массива реализуется очередь людей,\nстоящих за билетами в кинотеатр. Первому человеку, входящему в очередь, присваивается номер 1, а окно кассира находится \nсправа. В этой ситуации ?',3,'Не правильный ответ !!! '),
(165,'Как в процессе вставки и удаления элементов конкретный элемент очереди перемещается в базовом массиве ?',3,'Не правильный ответ !!! '),
(166,'Вставка/извлечение элементов в очереди выполняется за время O(N)?',3,'Не правильный ответ !!! '),
(167,'Очередь может использоваться для хранения ?',3,'Не правильный ответ !!! '),
(168,'За какое время выполняется вставка элемента в типичной приоритетной очереди (в О-синтаксисе)?',3,'Не правильный ответ !!! '),
(169,'Опредиление <<приоритетная>> в названии приоритетной очереди означает, что ?',3,'Не правильный ответ !!! '),
(170,'Одно из различий между приоритетной очередью и упорядоченным массивом ?',3,'Не правильный ответ !!! '),
(171,'Приоритетную очередь удобно использовать для хранения ?',3,'Не правильный ответ !!! '),
(172,'Для обращения к элементам связного списка обычно используется ссылка на ?',3,'Не правильный ответ !!! '),
(173,'Создоваемая ссылка на элемент связного списка должна указывать на ?',3,'Не правильный ответ !!! '),
(174,'Сколько ссылок необходимо изменить для вставки элемента в середину односвязного списка ?',3,'Не правильный ответ !!! '),
(175,'Предположим, поле current указывает на предпоследний элемент односвязного списка. Как выглядит команда для удаления \nпоследнего элемента списка ?',3,'Не правильный ответ !!! '),
(176,'Двусвязный список ?',3,'Не правильный ответ !!! '),
(177,'Что происходит с элементом связного списка, когда все ссылки на него начинают указывать на другой объект ?',3,'Не правильный ответ !!! '),
(178,'В методах вставки и удаления необходимо проверять особый случай ?',3,'Не правильный ответ !!! '),
(179,'Если копирование занимает больше времени, чем сравнение, где удаление с заданным ключом будет выполняться быстрее ?',3,'Не правильный ответ !!! '),
(180,'Сколько перемещений по односвязному списку потребуется для удаления с наибольшим крючом ?',3,'Не правильный ответ !!! '),
(181,'Какое из следующих утверждений ложно? Итераторы удобно применить для выполнения:',3,'Не правильный ответ !!! '),
(182,'Какая структура данных лучше подойдет дря реализации стека: односвязный список или массив ?',3,'Не правильный ответ !!! '),
(183,'Недостаток сортировки слиянием ?',10,'Не правильный ответ !!! '),
(184,'Кроме циклов, для замены рекурсии также часто используется ?',10,'Не правильный ответ !!! '),
(185,'На чем основана сортировка Шелла ?',10,'Не правильный ответ !!! '),
(186,'Если массив содержит 100 элементов, то алгоритм Кнута начнет с интервала ?',10,'Не правильный ответ !!! '),
(187,'Какие из следующих действий Не следует выполнять для преобразования сортировки методом вставки в сортировку Шелла ?',10,'Не правильный ответ !!! '),
(188,'Хорошая интервальная последовательность сортировки Шелла строится многократным делением размера массива на 2 ?',10,'Не правильный ответ !!! '),
(189,'Заполните пропуски в О-синтаксисе: скорость сортировки Шелла выше ...., но ниже .... ?',10,'Не правильный ответ !!! '),
(190,'Разбиением называется ?',11,'Не правильный ответ !!! '),
(191,'При разбиении каждый элемент массива сравнивается с ?',11,'Не правильный ответ !!! '),
(192,'Если большие ключи сгруппированы справа, то индексом разбиения называется ?',10,'Не правильный ответ !!! '),
(193,'Быстрая сортировка основана на разбиении исходного массива с последующим ?',10,'Не правильный ответ !!! '),
(194,'После разбиения в простой версии быстрой сортировки опорный элемент ?',10,'Не правильный ответ !!! '),
(195,'Определение медианы по трем точкам используется для выбора ?',11,'Не правильный ответ !!! '),
(196,'У поддерева двоичного дерева всегда ?',3,'Не правильный ответ !!! '),
(197,'Представляется ли обычно узел и дерево разными классами, в реализации дерева на языке Java ?',3,'Не правильный ответ !!! '),
(198,'Контракт между equals и hashcode ?',2,'Не правильный ответ !!! '),
(199,'Алгоритм поиска в дереве двоичного поиска перемещается от узла к узлу и проверяет ?',3,'Не правильный ответ !!! '),
(200,'Несбалансированным называется дерево ?',3,'Не правильный ответ !!! '),
(201,'Вставка узла начинается с тех же действий что и .... узла ?',3,'Не правильный ответ !!! '),
(202,'Допустим, преемником узла А является узел S. В этом случае ключ узла S должен быть ?',3,'Не правильный ответ !!! '),
(203,'Какое из следующих утверждений ложно по отношению к дереву, используемому для представления математических выражений ?',3,'Не правильный ответ !!! '),
(204,'Если для представления дерева используется массив, то правый потомок узла с индексом n имеет индекс ?',3,'Не правильный ответ !!! '),
(205,'Что бы удалить узел с одним потомком из дерева двоичного поиска, необходимо найти приемника этого узла ?',3,'Не правильный ответ !!! '),
(206,'Дерево Хаффмана обычно используется для .... текста ?',3,'Не правильный ответ !!! '),
(207,'Какое из  следующих утверждений ложно по отношению к дереву Хаффмана ?',3,'Не правильный ответ !!! '),
(208,'Сбалансированость деревьев двоичного поиска предотвращает снижение производительности при .... упорядоченных \n(в прямом или обратном порядке) данных ?',3,'Не правильный ответ !!! '),
(209,'В сбалансированном дереве ?',3,'Не правильный ответ !!! '),
(210,'Красно-черные правила требуют возможной перестановки узлов дерева для обеспечения его сбалансированности ?',3,'Не правильный ответ !!! '),
(211,'Пустым потомком называется ?',3,'Не правильный ответ !!! '),
(212,'Какое из следующих утверждений не является красно-черным правилом ?',3,'Не правильный ответ !!! '),
(213,'Какие операции применяются для восстановления сбалансированности дерева ?',3,'Не правильный ответ !!! '),
(214,'В какой цвет окрашены только что вставленные узлы ?',3,'Не правильный ответ !!! '),
(215,'В объектно-ориентированных языках программирования полиморфизм обеспечивается с помощью ?',1,'Не правильный ответ !!! '),
(216,'Что из ниже перечисленного относиться к трем китам ООП (три основных понятия ООП)?',1,'Не правильный ответ !!! '),
(217,'Какая разница между объектом и классом ?',1,'Не правильный ответ !!! '),
(218,'Время жизни агрегируемого объекта меньше либо равно времени жизни агрегата ?',1,'Не правильный ответ !!! '),
(219,'Какой принцип ООП необходимо использовать, чтобы заменить конструкции if-then-else в данном фрагменте кода: if \n(animal.IsCat()) { /* код */ } else if (animal.IsDog()) { /* код */ } else if (animal.IsKoala()) { /* код */ } . . . ?',1,'Не правильный ответ !!! '),
(220,'High Cohesion (сильное сцепление) - это ОО принцип, наиболее ассоциирующийся с ... ?',1,'Не правильный ответ !!! '),
(221,'Выберете наиболее точное определение абстракции:',1,'Не правильный ответ !!! '),
(222,'Система обеспечивает принцип наследования в том случае, если ?',1,'Не правильный ответ !!! '),
(223,'Отношение композиции (укажите все подходящие варианты) ?',1,'Не правильный ответ !!! '),
(224,'Выберите наиболее подходящее определение Класса. ',1,'Не правильный ответ !!! '),
(225,'Выберите корректные утверждения, связанные с понятием полиморфизма : ',1,'Не правильный ответ !!! '),
(226,'Термин \"наследование\" обозначает, что... ?',1,'Не правильный ответ !!! '),
(227,'Выберите наиболее точное определение инкапсуляции :',1,'Не правильный ответ !!! '),
(228,'Какой шаблон проектирования можно определить следующей фразой: \".. - поведенческий шаблон проектирования, обеспечивающий \nвзаимодействие множества объектов, формируя при этом слабую связанность и избавляя объекты от необходимости явно \nссылаться друг на друга \" ?',1,'Не правильный ответ !!! '),
(229,'Какие утверждения из перечисленных верны ?',1,'Не правильный ответ !!! '),
(230,'Что из перечисленного является преимуществом объектно-ориентированного подхода к программированию перед структурным \nпрограммированием ?',1,'Не правильный ответ !!! '),
(231,'Какие механизмы в ОО языках обычно позволяют обеспечить инкапсуляцию объектов ?',1,'Не правильный ответ !!! '),
(232,'Наследование и композиция взаимоисключающие понятия. То есть при создании иерархии объектов используется либо \nнаследование, либо композиция ?',1,'Не правильный ответ !!! '),
(233,'Как называется объект, задача которого состоит в реакции на возникновение определенного события ?',1,'Не правильный ответ !!! '),
(234,'С помощью какого запроса можно удалить все записи из таблицы A ?',9,'Не правильный ответ !!! '),
(235,'Результат объединения запросов выведет все значения из таблицы tab ? \nSelect * from tab where b=\'a\'  UNION  Select * from tab where b<>\'a\' ',9,'Не правильный ответ !!! '),
(236,'Какие из следующих ключевых слов используются в конструкции order by (выберите все подходящие варианты)?',9,'Не правильный ответ !!! '),
(237,'Какими запросами можно получить все поля и записи таблицы Employers ?',9,'Не правильный ответ !!! '),
(238,'В некоторой таблице есть колонка EX_COL. Записи таблицы для этой колонки содержат значения { 100, 200, 300, NULL }. \nКаким будет результат функции AVG(EX_COL)?',9,'Не правильный ответ !!! '),
(239,'Дана таблица Persons: С помощью какого запроса можно поместить значение \'Perez\' в поле LastName таблицы Persons ?',9,'Не правильный ответ !!! '),
(240,'Для чего используется ключевое слово DISTINCT ?',9,'Пояснение: DISTINCT вернёт уникальные записи результирующей таблицы.\nИ уникальные они будут при отличии в любом поле.'),
(241,'Дана таблица Users: Получим ли мы единственную запись таблицы Users с помощью запроса: \nSELECT * FROM USERS WHERE ADDBY = NULL ',9,'Не правильный ответ !!! '),
(242,'Что верно о следующем SQL выражении: CREATE TABLE persons AS SELECT name, surname FROM person; ',9,'Не правильный ответ !!! '),
(243,'Таблица RATE имеет поля rate_id, id_del, value. Какой результат выполнения следующего запроса? (Используемый стандарт: \nANSI SQL 99) DELETE FROM RATE where rate_id in (SELECT rate_id FROM RATE WHERE id_del=1) AND id_del=0 ',9,'Не правильный ответ !!! '),
(244,'Инструкция языка SQL - ORDER BY определяет ?',9,'Не правильный ответ !!! '),
(245,'При каком соединении могут остаться висящие кортежи ?',9,'Не правильный ответ !!! '),
(246,'Какой знак в запросах с использованием LIKE соответствует произвольному количеству символов в строке ?',9,'Не правильный ответ !!! '),
(247,'Когда оператор AND И OR совместно используются после WHERE ... ?',9,'Не правильный ответ !!! '),
(248,'Какое из следующих действий не выполняется при повороте ?',3,'Не правильный ответ !!! '),
(249,'\"Переходящий\" узел или поддерево изначально является ? .... ,а при перемещении становится ? .... ',3,'Не правильный ответ !!! '),
(250,'Какое из следующих утверждений ложно ? Необходимость в выполнении поворотов в красно-черном дереве может возникнуть :',3,'Не правильный ответ !!! '),
(251,'Что изменяется при переключении в красно-черном дереве ?',3,'Не правильный ответ !!! '),
(252,'Внешний внук :',3,'Не правильный ответ !!! '),
(253,'В красно-черном дереве : Если один поворот выполняется сразу же после другого, они выполняются в обратных направлениях ?',3,'Не правильный ответ !!! '),
(254,'В красно-черном дереве : Два поворота необходимы в ситуации когда ?',3,'Не правильный ответ !!! '),
(255,'Удаление в красно-черном дереве может потребовать некоторого изменения структуры дерева ?',3,'Не правильный ответ !!! '),
(256,'Дерево 2-3-4 называется так потому, что узел может иметь ?',3,'Не правильный ответ !!! '),
(257,'Преимущество дерева 2-3-4 перед деревом двоичного поиска заключается в том что оно ?',3,'Не правильный ответ !!! '),
(258,'В дереве 2-3-4 : Элементы данных хранятся исключительно в листовых узлах ?',3,'Не правильный ответ !!! '),
(259,'Возможна ли перегрузка операторов в Java ?',2,'Не правильный ответ !!! '),
(260,'Допустим в дереве 2-3-4 имеется родительский узел с элементами данных 25, 50 и 75. Если один из потомков содержит \nэлементы со значениями 60, 70 то это будет потомок с номером ?',3,'Не правильный ответ !!! '),
(261,'Какое из следующих утверждений ложно для дерева 2-3-4 ? При разбиении узла всегда:',3,'Не правильный ответ !!! '),
(262,'Количество уровней в дереве 2-3-4 увеличивается при ?',3,'Не правильный ответ !!! '),
(263,'Что из перечисленного не происходит при поиске в дереве 2-3-4 ?',3,'Не правильный ответ !!! '),
(264,'Выполнено разбиение не-корневого узла в дереве 2-3-4. Элемент с каким прежним номером содержится в новом правом потомке?',3,'Не правильный ответ !!! '),
(265,'Чему в красно-черном дереве эквивалентно разбиение 4-узла в дереве 2-3-4 ?',3,'Не правильный ответ !!! '),
(266,'Какое из утверждений об операции разбиения узлов в дереве 2-3 (не в дереве 2-3-4!) ложно ?',3,'Не правильный ответ !!! '),
(267,'С какой сложностью (в 0-синтаксисе) выполняются операции в деревом 2-3 ?',3,'Не правильный ответ !!! '),
(268,'При обращении к данным хранящимся на диске ?',2,'Не правильный ответ !!! '),
(269,'Сколько элементов содержит каждый узел в В-дереве ?',3,'Не правильный ответ !!! '),
(270,'Процес разбиения в В-дереве похож на разбиение в дереве 2-3 ?',3,'Не правильный ответ !!! '),
(271,'В области внешнего хранения данных индексированием называется создание файла содержащего ?',3,'Не правильный ответ !!! '),
(272,'За какое время (в 0-синтаксисе) выполняется поиск элемента в хеш-таблице(в идеальном случае) ?',3,'Не правильный ответ !!! '),
(273,'Что преобразует диапазон значений ключей в диапазон значений индексов ?',3,'Не правильный ответ !!! '),
(274,'Термином \"открытая адресация\" называется ?',3,'Не правильный ответ !!! '),
(275,'Использование следующей доступной позиции после безуспешной пробы называется ?',3,'Не правильный ответ !!! '),
(276,'Какие смещения применяются на первых пяти шагах квадратичного пробирования ?',3,'Не правильный ответ !!! '),
(277,'Вторичная группировка возникает из-за того что ?',3,'Не правильный ответ !!! '),
(278,'Метод цепочек основан на создании в каждой ячейке ?',3,'Не правильный ответ !!! '),
(279,'Приемлимый коэффициент заполнения в методе цепочек равен ?',3,'Не правильный ответ !!! '),
(280,'Возможная хеш-функция для строк основана на умножении кодов символов на последовательно увеличиваемые степени числа ?',3,'Не правильный ответ !!! '),
(281,'Если объем данных неизвестен заранее, то оптимальным методом является ?',3,'Не правильный ответ !!! '),
(282,'Если в хеш-функции используется метод свертки, то количество цифр в каждой группе должно соответствовать ?',3,'Не правильный ответ !!! '),
(283,'При линейном пробировании безуспешный поиск занимает больше времени, чем успешный поиск ?',3,'Не правильный ответ !!! '),
(284,'В методе цепочек время вставки нового элемента ?',3,'Не правильный ответ !!! '),
(285,'При внешнем хешировании важно чтобы блоки не заполнялись записями ?',3,'Не правильный ответ !!! '),
(286,'При внешнем хешировании все записи с ключами, хешируемыми в одно значение, располагаются в ?',3,'Не правильный ответ !!! '),
(287,'Виртуальные методы... Необходимо продолжить утверждение (укажите все подходящие варианты).',1,'Не правильный ответ !!! '),
(288,'Словом \"агрегация\" (включение, композиция) точнее всего описывается отношение между... ?',1,'Не правильный ответ !!! '),
(289,'Драконы умеют летать (как, например, птицы) и ползать (как, например, ящерицы). С точки зрения ООП, примером чего \nявляется данная ситуация (выберите наиболее точный вариант) ?',1,'Не правильный ответ !!! '),
(290,'Какая разница между идентичностью (identity) и равенством (equality) объектов в ООП ?',1,'Не правильный ответ !!! '),
(291,'Термин \"наследование\" обозначает, что..',1,'Не правильный ответ !!! '),
(292,'Выберете наиболее точное определение полиморфизму :',1,'Не правильный ответ !!! '),
(293,'Перечислите недостатки ООП парадигмы.',1,'Не правильный ответ !!! '),
(294,'Может ли быть конструктор виртуальным ?',1,'Не правильный ответ !!! '),
(295,'Какое наиболее важное преимущество предоставляет персистентность объектов в приложении ?',1,'Не правильный ответ !!! '),
(296,'В чем отличие абстрактного класса от интерфейса? Выберите наиболее точное определение.',1,'Не правильный ответ !!! '),
(297,'Как называется способность объекта скрывать свои данные и реализацию от других объектов системы ?',1,'Не правильный ответ !!! '),
(298,'Выберите наиболее точное определение наследованию :',1,'Не правильный ответ !!! '),
(299,'Наследование и композиция взаимоисключающие понятия. То есть при создании иерархии объектов используется либо\nнаследование, либо композиция ?\n',1,'Не правильный ответ !!! '),
(300,'Как в терминах ООП называется объект, который не может быть изменен после создания ?',1,'Не правильный ответ !!! '),
(301,'Отношение реализации.',1,'Не правильный ответ !!! '),
(302,'Класс B расширяет класс A. Какие утверждения из перечисленных верны :',1,'Не правильный ответ !!! '),
(303,'Почему в некоторых языках программирования отказываются от поддержки множественного наследования \n(имеется в виду наследование реализации)?',1,'Не правильный ответ !!! '),
(304,'Какие механизмы в ОО языках обычно позволяют обеспечить инкапсуляцию объектов ?',1,'Не правильный ответ !!! '),
(305,'SELECT * FROM employees. Для того, чтобы получить все записи из таблицы, где значение в колонке last_name начинается со \nстроки \'SM\', какие условия следует использовать из приведенных ниже ?',9,'Не правильный ответ !!! '),
(306,'Для чего применяются индексы в БД (укажите все подходящие варианты) ?',9,'Не правильный ответ !!! '),
(307,'Что означает термин \"полный\" применительно к двоичным деревьям ?',3,'Не правильный ответ !!! '),
(308,'Что означает термин \"слабая упорядоченность\" применительно к двоичным деревьям ?',3,'Не правильный ответ !!! '),
(309,'Узлы в пирамиде всегда извлекаются из ?',3,'Не правильный ответ !!! '),
(310,'В ходе смещения вверх в пирамиде, упорядоченной по убыванию :',3,'Не правильный ответ !!! '),
(311,'Что такое первичный ключ (primary key)? Укажите наиболее точное определение.',9,'Не правильный ответ !!! '),
(312,'Укажите корректные команды INSERT из перечисленных :',9,'Не правильный ответ !!! '),
(313,'Для какого из ключевых слов можно добавить строку \"TABLE employees\", чтобы запрос выполнился для таблицы employees ?',9,'Не правильный ответ !!! '),
(314,'Таблица EMPLOYEES имеет поле CURRENT_TASK_ID, \nкоторое является внешним ключом и ссылается на поле TASK_ID таблицы TASKS. \r\nВывести список, состоящий из имен всех имеющихся сотрудников и их текущих занятий.',9,'Не правильный ответ !!! '),
(315,'Выберите количественные предикаты :',9,'Не правильный ответ !!! '),
(316,'Для чего используется ключевое слово DISTINCT ?',9,'Пояснение: DISTINCT вернёт уникальные записи результирующей таблицы.\nИ уникальные они будут при отличии в любом поле.'),
(317,'При объединении (UNION) нескольких выборок должны ли они возвращать одинаковое количество, порядок и тип полей ?',9,'Не правильный ответ !!! '),
(318,'Выберите верный синтаксис DELETE выражений.',9,'Не правильный ответ !!! '),
(319,'Какие из перечисленных выражений истинны ?',9,'Не правильный ответ !!! '),
(320,'Синонимом какого понятия является понятие \'кортеж\' ?',9,'Не правильный ответ !!! '),
(321,'Таблица RATE имеет поля rate_id, id_del, value. Какой результат выполнения следующего запроса? (Используемый стандарт: \nANSI SQL 99) DELETE FROM RATE where rate_id in (SELECT rate_id FROM RATE WHERE id_del=1) AND id_del=0 ',9,'Не правильный ответ !!! '),
(322,'В таблице category поле id имеет тип integer. Какие из перечисленных ниже запросов вернут такой же результат, \nкак и этот запрос: select * from category where id between 2 and 4 (Перечислете все варианты).',9,'Не правильный ответ !!! '),
(323,'В запросе мы хотим выбрать все строки из таблицы Discount, у которых в колонке Description написано \"Joe\'s Special Blend\" \n(без кавычек). Выберите правильный вариант:',9,'Не правильный ответ !!! '),
(324,'Что является верным для языка SQL ?',9,'Не правильный ответ !!! '),
(325,'Какое ключевое слово запрещено использовать совместно с оператором ROLLUP ?',9,'Не правильный ответ !!! '),
(326,'С помощью какого update-запроса можно обновить значения более чем одной колонки ?',9,'Не правильный ответ !!! '),
(327,'Дана пустая таблица publisher с колонками id и name. На id стоит автоинкремент, а name имеет тип varchar(40). Какие из\nследующих запросов корректно отработают :',9,'Не правильный ответ !!! '),
(328,'Что делает опция ESCAPE в следующем выражении SQL : \nSELECT ProductName, ProductCode FROM Products LIKE \'GA_00_A\' ESCAPE \'A\'',9,'Не правильный ответ !!! '),
(329,'Какой тип оператора будет анализироваться в первую очередь (имеет больший приоритет) в выражении SQL из представленных :',9,'Пояснение: 1. Знаки \'+\' и \'-\' 2. Умножение (*),
 деление (/)\n3. Сложение (+),
 вычитание(-) 4. =, <>, <, >, <=, >=, \nBETWEEN, IN, LIKE, IS NULL 5. NOT 6. AND 7. OR'),
(330,'Может ли Garbage Collector удалять объекты любых классов ?',4,'Не правильный ответ !!! '),
(331,'Какие исключения ПОТЕНЦИАЛЬНО могут возникнуть при присваивании одной переменной объектного типа, \nдругой переменной ЛЮБОГО типа : a = b; ?',2,'Не правильный ответ !!! '),
(332,'Есть задача ограничить доступ к членам public-класса только методами этого класса. Какой минимальный уровень доступа \nследует установить для защищаемых членов ?',2,'Не правильный ответ !!! '),
(333,'Какой из классов Java-коллекций наиболее целесообразно использовать для хранения различных компаний и их курсов акций? \nКласс должен обязательно по наследству поддерживать синхронизацию.',2,'Не правильный ответ !!! '),
(334,'Пирамида может быть представлена в виде массива, потому что пирамида ?',3,'Не правильный ответ !!! '),
(335,'Последний узел пирамиды ?',3,'Не правильный ответ !!! '),
(336,'Что является по отношению к стеку тем же, чем пирамида по отношению к приоритетной очереди(все варианты) ?',3,'Не правильный ответ !!! '),
(337,'При вставке в пирамиде, упорядоченной по убыванию, используется смещение ?',3,'Не правильный ответ !!! '),
(338,'Пиромидальная сортировка основана на ?',3,'Не правильный ответ !!! '),
(339,'Сколько массивов, размер каждого из которых достаточен для хранения всех данных, требуется для сортировки пирамиды ?',3,'Не правильный ответ !!! '),
(340,'Заполните пробелы. В графе .... соединяет две .... ?',3,'Не правильный ответ !!! '),
(341,'Как по матрице смежности определить количество ребер в ненаправленном графе ?',3,'Не правильный ответ !!! '),
(342,'Наполненым называется граф, в котором ?',3,'Не правильный ответ !!! '),
(343,'Какая структурная единица графа соответствует выбору хода в игровом моделировании ?',3,'Не правильный ответ !!! '),
(344,'Матрица смежности состоит из строк {0,1,0,0},{1,0,1,1}{0,1,0,0}{0,1,0,0}. Как выглядит соответствующий список смежности?',3,'Не правильный ответ !!! '),
(345,'Минимальным остовным деревом называется граф, в котором ?',3,'Не правильный ответ !!! '),
(346,'Сколько разных минимальных основных деревьев существует в направленном графе из трех вершин и трех ребер ?',3,'Не правильный ответ !!! '),
(347,'Направленный граф обязательно содержит цикл, если ?',3,'Не правильный ответ !!! '),
(348,'Граф не содержащий циклов называется ?',3,'Не правильный ответ !!! '),
(349,'Может ли минимальное остовное дерево ненаправленного графа содержать циклы ?',3,'Не правильный ответ !!! '),
(350,'Для заданного графа может существовать несколько правильных вариантов топологической сортировки ?',3,'Не правильный ответ !!! '),
(351,'Результатом топологической сортировки является ?',3,'Не правильный ответ !!! '),
(352,'Может ли дерево содержать циклы ?',3,'Не правильный ответ !!! '),
(353,'(Заполните пробел).Веса во взвешенном графе являются свойством .... графа ?',3,'Не правильный ответ !!! '),
(354,'Во взвешенном графе минимальное остовное дерево стремится свести к минимуму :',3,'Не правильный ответ !!! '),
(355,'Вес минимального остовного дерева зависит от выбора начальной вершины ?',3,'Не правильный ответ !!! '),
(356,'Что удаляется из приоритетной очереди в алгоритме построения минимального остовного дерева ?',10,'Не правильный ответ !!! '),
(357,'Алгоритм построения минимального остовного дерева исключает ребро из списка, если оно ведет к вершине которая ?',10,'Не правильный ответ !!! '),
(358,'Алгоритм Дейкстры находит кратчайший путь :',10,'Не правильный ответ !!! '),
(359,'Правило алгоритма Дейкстры требует, чтобы в дерево всегда включалась вершина, ближайшая к начальной вершине ?',10,'Не правильный ответ !!! '),
(360,'(Заполните пробел). Алгоритм Флойда для взвешенных графов является тем, чем .... является для невзвешенных графов.',10,'Не правильный ответ !!! '),
(361,'Алгоритм Флойда использует представление графа в виде ?',10,'Не правильный ответ !!! '),
(362,'За какое приблизительное время (в 0-синтаксисе) решается задача обхода доски ходом шахматного коня ?',10,'Не правильный ответ !!! '),
(363,'Задача выбора кратчайшего пути имеет смысл только для направленных графов ?',10,'Не правильный ответ !!! '),
(364,'У Вас есть иерархическая система состоящая из вложенных графических компонентов, каждый из которых имеет координаты \n(left, top) и габариты (width, height). При нажатии клавиши мышки система получает координаты курсора мышки (x, y). \nВам необходимо определить в области какого из компонентов была нажата мышка и вызвать его метод-обработчик. \nКакой из паттернов проектирования Вы для этого примените ?',2,'Не правильный ответ !!! '),
(365,'В Java есть возможность обойти последовательно все элементы некоторой коллекции. Какой паттерн проектирования был \nиспользован для достижения этой цели ?',2,'Не правильный ответ !!! '),
(366,'Пример использования какого паттерна можно наблюдать в следующем фрагменте кода:\nFileInputStream in = new FileInputStream(\"fileExample.dat\"); BufferedInputStream bin = new BufferedInputStream(in); ',2,'Не правильный ответ !!! '),
(367,'Реализацией какого паттерна является класс java.lang.Runtime ?',2,'Не правильный ответ !!! '),
(368,'Результатом применения какого паттерна является метод iterator() в интерфейсе java.util.Collection ?',2,'Не правильный ответ !!! '),
(369,'Шаблон Builder...',2,'Не правильный ответ !!! '),
(370,'Какие минусы у встроенной в Java реализации шаблона наблюдатель (java.util.Observable) ?',2,'Не правильный ответ !!! '),
(371,'Укажите отрицательные стороны применения паттернов проектирования: ',2,'Не правильный ответ !!! '),
(372,'Применение какого шаблона проектирования демонстрирует следующий код ? List<String> strings = Arrays.asList(\"hello, \", \"world\", \"!\");  ',2,'Не правильный ответ !!! '),
(373,'Метод с аргументами параметризированного типа является примером реализации паттерна Template Method ?',2,'Не правильный ответ !!! '),
(374,'Верно ли утверждение, что паттерн Facade определяет высокоуровневый интерфейс, упрощающий работу с подсистемой ?',2,'Не правильный ответ !!! '),
(375,'Какой шаблон проектирования лежит в основе класса java.lang.StringBuffer ?',2,'Не правильный ответ !!! '),
(376,'Какой шаблон проектирования используется в следующем фрагменте кода ? \nString fileName = \"D:/somefile.txt\"; \nInputStream inputStream = new DataInputStream(new BufferedInputStream(new FileInputStream(fileName))); ',2,'Не правильный ответ !!! '),
(377,'Какой шаблон проектирования неявно использует следующий код ? \nCollection<String> strings = Arrays.asList(\"foo\", \"bar\"); \n         for (String s : strings) { \n             System.out.print(s  + \" \"); \n         } ',2,'Не правильный ответ !!! '),
(378,'К какому паттерну проектирования можно отнести данный фрагмент кода : public enum Factory { PROXY } ',2,'Не правильный ответ !!! '),
(379,'Препятствует (затрудняет) ли сериализация объекта реализации шаблона проектирования Singleton ?',2,'Не правильный ответ !!! '),
(380,'Клонирование объектов в Java имеет много общего с идеей паттерна...',2,'Не правильный ответ !!! '),
(381,'Примером какого паттерна является класс java.io.BufferedWriter :',2,'Не правильный ответ !!! ');
/*!40000 ALTER TABLE `Task` ENABLE KEYS */;
UNLOCK TABLES;

